const { decryptMedia } = require('@open-wa/wa-decrypt')
const fs = require('fs-extra')
const axios = require('axios')
const moment = require('moment-timezone')
const get = require('got')
const request = require('request')
const color = require('./lib/color')
const { spawn, exec } = require('child_process')
const nhentai = require('nhentai-js')
const { API } = require('nhentai-api')
const md5 = require('md5')
const curse = require('curse-text')
var speed = require("performance-now")
const parseString = require('xml2js').parseString;
const pantunn = require('./lib/pantu')
const translatte = require('translatte')
const yts = require("./lib/cmd.js");
const premium = JSON.parse(fs.readFileSync('./lib/premium.json'))
const google = require('google-it')
const {license,donasi,bahasa,surah,help2,chromArgs,commandArray,adult} = require('./settings/template.js');
const { getCovidInfo, showCovidInfo } = require("./api/covidInfo");
const { getQuran, showQuranInfo } = require('./api/quran');
const { getLyrics } = require('./api/songLyrics');
const { getGombal } = require('./api/getGombal');
const korona = require('./src/korona');
const { liriklagu, quotemaker, randomNimek,getStickerMaker, fb, sleep, jadwalTv, ss, artinama, bijak, namaninjaku, alay, weton, between } = require('./lib/functions')
const { help, snk, info, donate, readme, listChannel } = require('./lib/help')
const { stdout } = require('process')
const os = require('os')
const { Primbon } = require("./lib/Primbon")
const { RemoveBgResult, removeBackgroundFromImageBase64, removeBackgroundFromImageFile } = require('remove.bg')
const responses = [
    'Adalah yoi',
    'Apaansi Gajelas',
    'oh gitu',
    'kasian amat aowkwkwkw',
    'diem lu jelek',
    'iri bilang bos',
    'bahh malah nanya gw',
    'gw mana tau ajg',
    'True mint',
    'Mana gw tau, emang gw bapaknya?',
    'Se7',
    'o',
    'oh',
    'diem lu ajg',
    'bacot ajg',
    'iya lah',
    'kok gitu?',
    "Tarik Sis?",
    "Yahahaha Hayyuk",
    "Opo iyoo?",
    "Ah Masa sich",
    "DPR YA?",
    "Anak DPR Jangan Sok Keras",
    "Bapaklu DPR kan?",
    "Cuma Mau Bilang,Jangan Temenin Anak DPR",
    'Alhamdulillah',
    'Astaghfirullah',
    'kamu berdosa banget',
    'Jangan tanya gw lah',
    'Gak',
    'Ya',
    'Adalah false',
    'Adalah true',
    'Puguh',
    'Sugan mabar yekan?',
    'G u bau',
    'Cari tau sendiri',
    'Keknya sih iya',
    'Keknya sih nggak',
    'Lah serius?',
    'Anjir',
    'lop u too,aw malu bgt',
    'mau dijawab?donasi dlu ajg',
    'lah ngatur',
    'siapalu?sok asik banget nanya"',
    'diem lu ajg',
    'bodoamat gw gadenger',
    'nulis apaansi?gangerti gua',
    'wkwkwk',
    'yain aja',
    'bodo',
    'tapi gw ganteng yekan?',
    'Gak tau',
    'Pukimak',
    'Meureun, gw juga gak tau sih',
    'Kagak',
    'Setelah gw pikir sih gak mungkin',
    'Setelah gw pikir sih mungkin aja',
    'Y',
    'G',
    'Terserah',
    'Terserah lu',
    'Tul',
    'Hah?',
    'Ngetik apaan? Burem',
    'Mana saya tau,sayakan bot',
    'mana bisa gitu ajg',
    'Lah kalo lu nanya gw,gw nanya siapa?',
    'Apa?gw ganteng?makasih xixixixi',
    'iya gw bot anying,nanya terosss',
    'bisa ga si ga nanya?bawel amat',
    'mau tau jawabannya?bayar ceban',
    'apa maksud lu nanya begitu anjg?',
    'Oh gatau deh',
    'masaa?',
    'hoax ga nich?',
    'ada badaknya gak?',
    'kalau gw jawab,dapet skin ga nich?',
    'anak kecil gaperlu tau',
    'True kh?',
    'Ah yang bener',
    'Nanya sm yg lain aja sana ajg',
    'Jangan nanya sama gw terus napa',
    'tanya sono sama rumput yang bergoyang',
    'males jawab gw asli',
    'gasuka pc aja ajg',
    'gausa gw jawab ya, gapenting mwheheheh'
]

const nsfw_ = JSON.parse(fs.readFileSync('./lib/NSFW.json'))
const welkom = JSON.parse(fs.readFileSync('./lib/welcome.json'))
//const bacot = JSON.parse(fs.readFileSync('./lib/bacot.json'))//

moment.tz.setDefault('Asia/Jakarta').locale('id')

module.exports = msgHandler = async (client, message) => {
    try {
        const { type, id, from, t, sender, isGroupMsg, chat, caption, isMedia, mimetype, quotedMsg, quotedMsgObj, mentionedJidList } = message
        let { body } = message
        const { name, formattedTitle } = chat
        let { pushname, verifiedName } = sender
        pushname = pushname || verifiedName
        const commands = caption || body || ''
        const command = commands.toLowerCase().split(' ')[0] || ''
        const args =  commands.split(' ')

        const msgs = (message) => {
            if (command.startsWith('!')) {
                if (message.length >= 10){
                    return `${message.substr(0, 15)}`
                }else{
                    return `${message}`
                }
            }
        }

        const mess = {
            wait: 'Permintaan sedang diproses...',
            error: {
                St: '[❗] Kirim gambar dengan caption *!p* atau tag gambar yang sudah dikirim',
                Qm: '[❗] Terjadi kesalahan, mungkin themenya tidak tersedia!',
                Yt3: '[❗] Terjadi kesalahan, tidak dapat meng konversi ke mp3!',
                Yt4: '[❗] Terjadi kesalahan, mungkin error di sebabkan oleh sistem.',
                Ig: '[❗] Terjadi kesalahan, mungkin karena akunnya private',
                Ki: '[❗] Bot tidak bisa mengeluarkan admin group!',
                Ad: '[❗] Tidak dapat menambahkan target, mungkin karena di private',
                Iv: '[❗] Link yang anda kirim tidak valid!'
            }
        }

        const time = moment(t * 1000).format('DD/MM HH:mm:ss')
        const botNumber = await client.getHostNumber()
        const blockNumber = await client.getBlockedIds()
        const groupId = isGroupMsg ? chat.groupMetadata.id : ''
        const groupAdmins = isGroupMsg ? await client.getGroupAdmins(groupId) : ''
        const isGroupAdmins = isGroupMsg ? groupAdmins.includes(sender.id) : false
        const isBotGroupAdmins = isGroupMsg ? groupAdmins.includes(botNumber + '@c.us') : false
        const ownerNumber = '6289636035164@c.us'
        const botadmins =['6289636035164@c.us','6283123565817@c.us','6281296728103@c.us','6285702412135@c.us','6281280995517@c.us','6285893600972@c.us'] //add the number of people that you want to the be bot admins
        const isbotadmin = botadmins.includes(sender.id)
        let premi = JSON.parse(fs.readFileSync('./lib/premium.json'))
        const isPremium = premi.includes(sender.id)
        const isOwner = sender.id === ownerNumber
        const serial = sender.id 
        const isBlocked = blockNumber.includes(sender.id)
        const isNsfw = isGroupMsg ? nsfw_.includes(chat.id) : false
        const processTime = now => moment.duration(now - moment(t * 1000)).asSeconds() // t => timestamp when message
        const uaOverride = 'WhatsApp/2.2029.4 Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36'
        const isUrl = new RegExp(/https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)/gi)
        if (!isGroupMsg && command.startsWith('!')) console.log('\x1b[1;31m~\x1b[1;37m>', '[\x1b[1;32mEXEC\x1b[1;37m]', time, color(msgs(command)), 'from', color(pushname))
        if (isGroupMsg && command.startsWith('!')) console.log('\x1b[1;31m~\x1b[1;37m>', '[\x1b[1;32mEXEC\x1b[1;37m]', time, color(msgs(command)), 'from', color(pushname), 'in', color(formattedTitle))
        if (!isGroupMsg && !command.startsWith('!')) console.log('\x1b[1;33m~\x1b[1;37m>', '[\x1b[1;31mMSG\x1b[1;37m]', time, color(body), 'from', color(pushname))
        if (isGroupMsg && !command.startsWith('!')) console.log('\x1b[1;33m~\x1b[1;37m>', '[\x1b[1;31mMSG\x1b[1;37m]', time, color(body), 'from', color(pushname), 'in', color(formattedTitle))
        if (isBlocked) return
        //if (!isOwner) return
        switch(command) {
        case '!sticker':
        case '!stiker':
        case '!p':
        case '!P':
        case '#stiker':
        case '#sticker':
      if (isMedia && type === 'image') {
                const mediaData = await decryptMedia(message, uaOverride)
                const imageBase64 = `data:${mimetype};base64,${mediaData.toString('base64')}`
                await client.sendImageAsSticker(from, imageBase64)
                client.reply(from, `Durasi: ${processTime(moment())} *Detik*

Follow https://instagram.com/dandisubhani_
Di Follback Kok,Terima Kasih`, message.id)
            } else if (quotedMsg && quotedMsg.type == 'image') {
                const mediaData = await decryptMedia(quotedMsg, uaOverride)
                const imageBase64 = `data:${quotedMsg.mimetype};base64,${mediaData.toString('base64')}`
                await client.sendImageAsSticker(from, imageBase64)
                .then(() => client.reply(from, `Durasi: ${processTime(moment())} *Detik*`))
            } else if (args.length === 2) {
                const url = args[1]
                if (url.match(isUrl)) {
                    await client.sendStickerfromUrl(from, url, { method: 'get' })
                        .catch(err => console.log('Caught exception: ', err))
                } else {
                    await client.reply(from, mess.error.Iv, id)
                }
            } else {
                    await client.reply(from, mess.error.St, id)
            }
            break
            case '!ttp':   
               try
                {
                    const string = body.toLowerCase().includes('!ttp') ? body.slice(5) : body.slice(5)
                    if(args)
                    {
                        if(quotedMsgObj == null)
                        {
                            const gasMake = await getStickerMaker(string)
                            if(gasMake.status == true)
                            {
                                try{
                                    await client.sendImageAsSticker(from, gasMake.base64)
                                }catch(err) {
                                    await client.reply(from, 'Gagal membuat.', id)
                                } 
                            }else{
                                await client.reply(from, gasMake.reason, id)
                            }
                        }else if(quotedMsgObj != null){
                            const gasMake = await getStickerMaker(quotedMsgObj.body)
                            if(gasMake.status == true)
                            {
                                try{
                                    await client.sendImageAsSticker(from, gasMake.base64)
                                }catch(err) {
                                    await client.reply(from, 'Gagal membuat.', id)
                                } 
                            }else{
                                await client.reply(from, gasMake.reason, id)
                            }
                        }
                       
                    }else{
                        await client.reply(from, 'Tidak boleh kosong.', id)
                    }
                }catch(error)
                {
                    console.log(error)
                }
            break;

            case '!twitstalk': {
                if (args.length === 1)  return await client.reply(from, 'Kirim perintah *twitstalk [username]*\nConntoh *!twitstalk arianagrande*', id)
                const twtinfo = await get.get(`https://rest.farzain.com/api/twitter.php?id=${args[1]}&apikey=4mpk6473CGeRzJbWi5Tz3pMWF`).json()
                if (twtinfo.result.profilepicture == '') return await client.reply(from, twtinfo.result.name, id)
                const { result } = twtinfo
                const { name, screen_name, description, profilebanner, profilepicture, followers, following, likes, tweet, joined} = result
                const profil = profilepicture.replace(/\\/g,'')
                const caps1 = `👉 *Nama* : ${name}\n👉 *Username* : ${screen_name}\n👉 *Jumlah Followers* : ${followers}\n👉 *Jumlah Following* : ${following}\n👉 *Jumlah like* : ${likes}\n👉 *Jumlah tweet* : ${tweet}\n👉 *Deskripsi* : ${description}\n\n👉 *Bergabung pada* : ${joined}\n`
                await client.sendFileFromUrl(from, profil, 'Profiletwt.jpg', caps1, id)}
                break

                case '!trendtwitter': {
                    const respons = await axios.get('https://api.haipbis.xyz/trendingtwitter/id')
                    const { result, datetime } = respons.data
                    res = 38
                    if (args[0] >= 38) {
                      res = 38
                    } else {
                      res = args[0]
                    }
                    i = 0
                    pesan = `={ _*Trending Twitter Terbaru Hari Ini*_ }=\n\n${datetime}\n`
                    for (const isi of result) {
                      i++
                      pesan = pesan + `\n` + `*(${i})*\n` + '👉 *Judul* : _' + isi.title + '_' + '\n*👉 Link* : ' + isi.link + '\n👉 *Total Penyelusuran* : ' + isi.count + '\n\n'
                      if (i<res) {
                        pesen = pesan + '\n\n'
                      } else if(i > res){
                        break
                      }
                    }
                    await client.reply(from, pesan, id)}
                    break
                      case'!google':
                        const googleQuery = body.slice(8)
                        if(googleQuery == undefined || googleQuery == ' ') return
                        google({ 'query': googleQuery, }).then(results => {
                            let vars = results[0];
                            client.sendText(from, `_*Hasil Pencarian Google*_\n\n~> Judul : \n${vars.title}\n\n~> Deskripsi : \n${vars.snippet}\n\n~> Link : \n${vars.link}`);
                        }).catch(e => {
                            client.sendText(e);
                        })
                        break
                   case '!bug':
                            const bug = body.slice(5)
                            if(!bug) return
                                client.sendText(ownerNumber, `*[BUG REPORT]*\n\nNO PENGIRIM : wa.me/${serial.match(/\d+/g)}\n\n${bug}`)
                                client.reply(from, 'Masalah telah di laporkan ke owner BOT, laporan palsu/main2 tidak akan ditanggapi.', id)
                        break
                          case '!unblock':
                        if(!isOwner) return
                        if(args.length >= 3){
                            let unblock = `${args[2]}@c.us`
                            await client.contactUnblock(unblock).then(()=>{
                                reply(`Sukses unblok ${args[2]}!`)
                        })
                        }
                        break
                       case '!block':
                        if(!isOwner) return
                        if(args.length >= 3){
                            let block = `${args[2]}@c.us`
                            await client.contactBlock(block).then(() => {
                                reply(`Sukses blok ${args[2]}!`)
                            })
                            return
                        }
              case '!stickernobg':
            case '!nobg':
            case '!pnobg':
            case 'nobg':
            if (isMedia && type == 'image') {
              try {
                const mediaData = await decryptMedia(message, uaOverride)
                const imageBase64 = `data:${mimetype};base64,${mediaData.toString('base64')}`
                const base64img = imageBase64
                const filename = "./media/pic.jpg";
                //console.log(base64img)
                const outFile = './media/noBg.png'
                const result = await removeBackgroundFromImageBase64({ base64img, apiKey: '4yqG7QgMXkZ8AwiURLcEBebF', size: 'auto', type: 'auto', outFile })
                    await fs.writeFile(outFile, result.base64img)
                    await client.reply(from, 'Sedang Menghapus Background...\nMasing"User 5x Hapus Background!', message.id)
                    await client.sendImageAsSticker(from, `data:${mimetype};base64,${result.base64img}`)
                    client.reply(from, 'Sukses Anjay!', message.id)
                } catch(err) {
                    console.log(err)
                }
            }
            break
        case '!stickergif':
        case '!stikergif':
        case '!sgif':
        case '!gif':
            if (isMedia) {
                if (mimetype === 'video/mp4' && message.duration < 10 || mimetype === 'image/gif' && message.duration < 10) {
                    const mediaData = await decryptMedia(message, uaOverride)
                    client.reply(from, 'Sedang Proses Upload,Silahkan Tunggu ± 1 Menit!', id)
                    const filename = `./media/dandi.${mimetype.split('/')[1]}`
                    await fs.writeFileSync(filename, mediaData)
                    await exec(`gify ${filename} ./media/output.gif --fps=30 --scale=240:240`, async function (error, stdout, stderr) {
                        const gif = await fs.readFileSync('./media/output.gif', { encoding: "base64" })
                        await client.sendImageAsSticker(from, `data:image/gif;base64,${gif.toString('base64')}`)
                    })
                } else (
                    client.reply(from, '[❗] Kirim video dengan caption *!gif* max 10 sec!', id)
                )
            }
            break
      case '!rules': 
        case 'rules':
         client.reply(from, `Halo ${pushname}, Berikut Adalah Beberapa Rules Bot ini :
1.Bot ON Tergantung Mood
2.Jangan Spam Bot 
3.Kalo Bot NoRespon Jangan Rusuh 
4.Gunakan Bot dengan bijak
5.Semua Perintah Yang Kamu Kirim di proses otomatis oleh sistem
6.JANGAN TELPON BOT,KARENA AKAN KENA *BLOCK* OTOMATIS
7.Jangan download video YouTube lebih dari 15 Menit!!!
karena akan menyebabkan BOT MATI!!!
8.LANGGAR?BLOCK!!!

Dah Itu Aja`, message.id)
         break
         case '!donasi':
         case '!donate':
         client.reply(from, `Bagi Yang Mau Donasi Bisa Ke
Dana/OVO/Gopay ke Nomor: 089636035164
via Pulsa: 081296728103

Tidak Memaksa Anda Untuk Donasi,Terima Kasih`,message.id)
break
        case '!tts':
            if (args.length == 0) return client.reply(from, 'Kirim perintah *#tts* [id, en, jp, ar, ru, ko] [teks], contoh *#tts* id halo semua')
            const ttsId = require('node-gtts')('id')
            const ttsEn = require('node-gtts')('en')
            const ttsJp = require('node-gtts')('ja')
            const ttsAr = require('node-gtts')('ar')
            const ttsRu = require('node-gtts')('ru')
            const ttsKo = require('node-gtts')('ko')
            const dataText = body.slice(8)
            if (dataText === '') return client.reply(from, 'Format salah,ketik !tutor', message.id)
            if (dataText.length > 500) return client.reply(from, 'teks terlalu panjang, ngotak dong goblog', message.id)
            var dataBhs = body.slice(5, 7)
            if (dataBhs == 'id') {
                ttsId.save('./tts/resId.mp3', dataText, function () {
                    client.sendPtt(from, './tts/resId.mp3', message.id)
                })
            } else if (dataBhs == 'en') {
                ttsEn.save('./tts/resEn.mp3', dataText, function () {
                    client.sendPtt(from, './tts/resEn.mp3', message.id)
                })
            } else if (dataBhs == 'jp') {
                ttsJp.save('./tts/resJp.mp3', dataText, function () {
                    client.sendPtt(from, './tts/resJp.mp3', message.id)
                })
            } else if (dataBhs == 'ar') {
                ttsAr.save('./tts/resAr.mp3', dataText, function () {
                    client.sendPtt(from, './tts/resAr.mp3', message.id)
                })
            } else if (dataBhs == 'ru') {
                ttsRu.save('./tts/resRu.mp3', dataText, function () {
                    client.sendPtt(from, './tts/resRu.mp3', message.id)
                })
            } else if (dataBhs == 'ko') {
                ttsKo.save('./tts/resKo.mp3', dataText, function () {
                    client.sendPtt(from, './tts/resKo.mp3', message.id)
                })
            } else {
                client.reply(from, 'Masukin kode bahasanya: [id] untuk indonesia, [en] untuk inggris, [jp] untuk jepang, [ar] untuk arab, [ru] untuk russia, dan [ko] untuk korea\n\nContoh : !tts id selamat pagi', message.id)
            }
            break
             case '#call':
             case '!call':
            const nomorspam = body.slice(7)
            if (args.length === 1)  return client.reply(from, 'Kirim perintah !call (nomor)\nConntoh: !call 08972233421', id)
            const spamno = await get.get('https://mhankbarbar.herokuapp.com/api/spamcall?no='+ nomorspam).json()
            await client.reply(from, `${spamno.logs}`, id)          
            break
            case '!sms':
            const nomorspamm = body.slice(5)
            if (args.length === 0)  return client.reply(from, 'Kirim perintah !call (nomor)\nContoh: !sms 08972233421', id)
            const spamnoo = await get.get(`https://mhankbarbar.herokuapp.com/api/spamsms?no=${nomorspamm}&jum=`+ args[2]).json()
            await client.reply(from, `${spamnoo.logs}`, id)          
            break
            //premium user/
            case '!addpremi':
            if(!isOwner) return client.reply(from, 'Hanya Owner Yang Bisa', id)
                premium.push(args[1])
            fs.writeFileSync('./lib/premium.json', JSON.stringify(premium))
            client.reply(from, 'Berhasil menambahkan premium user!', id)
            break
            /*case '!bacot': {
            arg = body.trim().split('')
            if (arg[1] == 'add') {
                let bacott = body.slice(11)
                bacot.push(bacott)
                fs.writeFileSync('./lib/bacot.json', JSON.stringify(bacot))
                client.repy(from, `berhasil menambahkan *${bacott}* kedalam database`, id)
            } else {
                const Bacot = fs.readFileSync('./lib/bacot.json')
                const Bacott = JSON.parse(Bacot)
                const randcot = Math.floor(Math.random() * Bacott.length)
                const rindicot = Bacott[randcot]
                await client.reply(from, `${rindicot}`, id)
            }}
            break*/
            case '!si':
            case 's':
                let gan = require("urlencode");
        const regex = gan(tek);
        var url1 = `https://simsumi.herokuapp.com/api?text=${regex}&lang=ina`
        axios.get(url1)
        .then( (result) => {
            var b = JSON.parse(JSON.stringify(result.data));
            if (b.success == ""){
                client.reply(from, "Maaf kak, simi gak ngerti", id);
            }else{
                client.reply(from, b.success, id)
            }
        })
        break
               case '!play':
            if (!isPremium) return client.reply(from, 'Fitur ini hanya untuk premium user,jika ingin menggunakan fitur silahkan hubungi owner', id)
            //if (!isbotadmin) return client.reply(from, `Hai ${pushname} *Fitur Ini Hanya Untuk Member Premium*\nJika Ingin Menggunakan Fitur Ini Silahkan Hubungi Owner Bot`, id)
            if (args.length <= 0) return client.reply(from, 'Kirim perintah *!play judul - artis*, untuk contoh silahkan kirim perintah *play al waba-nissa sabyan*', id)
            var pilih = body.split(' ')[1]
            let messageIndex = body.indexOf(pilih) + pilih.length-1;
            let namaLagu = body.slice(messageIndex, body.length);  
            var keyword = namaLagu.replace(/ /g, "+");
            console.log('Nama lagu: '+namaLagu+'\n\nkeyword: '+keyword+'\npilihan (mp3/4): '+pilih)
            function foreach(arr, func){
                for(var i in arr){
                  func(i, arr[i]);
                }
            }
            (async () => {
                try {
                    var idyt = await yts.searchYoutube(keyword);
                    client.reply(from, 'Permintaan sedang diproses ...\nHarap beri jeda 1 menit agar tidak limit', id)
                    console.log(namaLagu)
                    urlll = `https://youtu.be/${idyt[1]}`
                    console.log(urlll)
                    console.log(pilih)
                    if(pilih == 'mp3'){
                        const resp = await get.get(`https://mhankbarbar.herokuapp.com/api/yta?url=${urlll}`).json()
                        if (resp.error) {
                            client.reply(from, resp.error, id)
                        } else {
                            const { title, thumb, filesize, result } = await resp
                            if (Number(filesize.split(' MB')[0]) >= 50.00) return client.reply(from, 'Maaf durasi video sudah melebihi batas maksimal!', id)
                            client.sendFileFromUrl(from, thumb, 'thumb.jpg', `➸ *Title* : ${title}\n➸ *Filesize* : ${filesize}\n➸ *Sumber* : Youtube\n\nSilahkan tunggu sebentar proses pengiriman file membutuhkan waktu beberapa menit.\ninstagram.com/dandisubhani_`, id)
                            await client.sendFileFromUrl(from, result, `${title}.mp3`, '', id).catch(() => client.reply(from, mess.error.Yt3, id))
                        }
                    }
                    else if(pilih == 'mp4'){
                        const ytv = await get.get(`https://mhankbarbar.herokuapp.com/api/ytv?url=${urlll}`).json()
                        if (ytv.error) {
                            client.reply(from, ytv.error, id)
                        } else {
                            if (Number(ytv.filesize.split(' MB')[0]) > 50.00) return client.reply(from, 'Maaf durasi video sudah melebihi batas maksimal!', id)
                            client.sendFileFromUrl(from, ytv.thumb, 'thumb.jpg', `➸ *Title* : ${ytv.title}\n➸ *Filesize* : ${ytv.filesize}\n➸ *Sumber* : Youtube\n\nSilahkan tunggu sebentar proses pengiriman file membutuhkan waktu beberapa menit.\ninstagram.com/dandisubhani_`, id)
                            await client.sendFileFromUrl(from, ytv.result, `${ytv.title}.mp4`, '', id).catch(() => client.reply(from, mess.error.Yt4, id))
                        }
                    }
                    else{
                        client.reply(from, 'pilih mp3/mp4\nContoh: play mp3 al waba - nissa saban\nContoh: play mp4 al waba - nissa sabyan', id)
                    }
                } catch (err) {
                    client.sendText(ownerNumber, 'Error command play : '+ err)
                    client.reply(from, mess.error.Yt3, id)
                }
            })();
            break
              /*case '!pasangan':
        if (args.length === 1) return client.reply(from, `Masukan perintah *!pasangan namamu&namapasangan*\ncontoh : *!pasangan asep&wawan*`, id)
        if (args.length > 2) return client.reply(from, `Masukan perintah *!pasangan namamu&namapasangan*\nContoh : *!pasangan asep&wawan*`, id)
        if (args.length === 2){
        var gh = args[1]
        var nama = gh.split("&")[0];
                var pasangan = gh.split("&")[1];
                request.get({
                        headers: {'content-type' : 'application/x-www-form-urlencoded'},
                        url:     'http://www.primbon.com/kecocokan_nama_pasangan.php?nama1='+ nama +'&nama2='+ pasangan

                },function(error, response, body){
                let $ = cheerio.load(body);
                var y = $.html().split('<b>KECOCOKAN JODOH BERDASARKAN NAMA PASANGAN</b><br><br>')[1];
                var t = y.split('.<br><br>')[1];
                var f = y.replace(t ," ");
                var x = f.replace(/<br\s*[\/]?>/gi, "\n");
                var h  = x.replace(/<[^>]*>?/gm, '');
                var d = h.replace("&amp;", '&')
                        console.log(""+ d);
                        client.reply(from ,`[Cek Kecocokan Jodoh Berdasarkan Nama ~*\n\n${d}`, id);
            });
        }
        break*/
    case '!tstbs64':
        if (args.length === 1){
        const sticker_from_url_gif_id = await client.sendStickerfromUrl(message.from, "https://i.giphy.com/media/yJil9u57ybQ9movc6E/source.gif")
                console.log("start -> sticker_from_url_gif_id", sticker_from_url_gif_id)
        }
        break
    case '!stim':
        if (args.length === 1){
            if( type==='sticker') {
                //getStickerDecryptable is an insiders feature! 
                let stickerDecryptable = await client.getStickerDecryptable(message.id);
                if(stickerDecryptable) mediaData = await decryptMedia(stickerDecryptable, uaOverride);
                } else {
                mediaData = await decryptMedia(message, uaOverride);
                }
                // you can send a file also with sendImage or await client.sendFile
                await client.sendImage(
                from,
                `data:${message.mimetype};base64,${mediaData.toString('base64')}`,
                filename,
                `You just sent me this ${type}`
                );
        }
        break
           case '!images':
    case '!image':
    case '!gambar':
        if (args.length <= 2) return await client.reply(from, 'Random image generator splash, bisa untuk wallpaper.\npenggunaan : *!gambar [halaman] [kata kunci]* contoh *!gambar 1 office*', id)
        if (args.length > 2){
        const reqpage = args[1]
        const reqimg = args.slice(2, args.length)
        const imgurl = `https://api.unsplash.com/search/photos?page=${reqpage}&query=${reqimg}&client_id=J92b7gyJFWEdgT3z6OXZlqXovHjcn9242Ob4rKdE3uA`
        const has = await get.get(imgurl).json()
        const { total_pages, results } = has
        const total_img = between(0, results.length)
        const linkUrlFull = results[total_img].urls.full
                const shortgetFull = await get.get(`https://api.haipbis.xyz/bitly?url=${linkUrlFull}`).json()
        const hazel = `*${results[total_img].alt_description}*\n\n*Deskripsi :* ${results[total_img].description}\n*Width :* ${results[total_img].width}\n*Height :* ${results[total_img].height}\n*Link HD :* ${shortgetFull.result}`
        const outsplash = results[total_img].urls.regular
        await client.sendFileFromUrl(from, outsplash, 'outimagesplash.jpeg', hazel, id)
//console.log(total_pages, results[0].width, results[1].height, results[3].alt_description, results[4].urls.full)
        }
        break
             case '!hi':
                  const pun = ["https://i.pinimg.com/236x/1e/ac/c6/1eacc606ec8db205d5f6b56a8a14e0a9.jpg","https://i.pinimg.com/236x/cd/51/fd/cd51fd87a17a1f879e9d6a040015a02e.jpg","https://i.pinimg.com/564x/1a/77/d1/1a77d17d317a16a1cf1598e84ff0c507.jpg","https://i.pinimg.com/236x/91/e3/78/91e3786a2822a656f0b9337c23a3b360.jpg","https://i.pinimg.com/564x/b6/2c/4a/b62c4a2f3be0f54a18ea07b95019d964.jpg","https://i.pinimg.com/236x/23/81/47/23814785b0d26e0d14b8c9eaf8302e78.jpg","https://i.pinimg.com/564x/a4/c1/4e/a4c14e7fd8b32ed0f5f290328bb8befd.jpg"]
                  let ten = pun[Math.floor(Math.random() * pun.length)]
            client.sendFileFromUrl(from, ten, 'pun.jpg', `Hai *${pushname}*`, message.id)
            break
             case '!server':
                await client.sendText(from,`Penggunaan RAM: *${(process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2)}MB / ${Math.round(require('os').totalmem / 1024 / 1024)}MB*\nCPU: *${os.cpus().length} ${os.cpus()[0].model}*`)
            break
            case 'ask':
            case '!ask':
                const question = args.join(' ')
                const answer = responses[Math.floor(Math.random() * (responses.length))]
                if (!question) client.reply(from, '⚠️ Format salah! Ketik *!tutor* untuk penggunaan.')
                await client.sendText(from, `Pertanyaan: *${question}* \n\nJawaban: ${answer}`)
            break
              case '!quran':
                                let quranData = {}, inpSurah = body.split(' ').slice(1)[0].toString(), inpAyat = body.split(' ').slice(2).toString();
                                getQuran(inpSurah, inpAyat).then(res => {
                                        let ayat = res.ayat.data, info = res.surat;

                                        quranData = {
                                                ayat: {
                                                        teks: ayat.ar[0].teks,
                                                        arti: ayat.id[0].teks
                                                },
                                                nama: info.nama,
                                                asma: info.asma,
                                                arti: info.arti,
                                                urut: `${inpSurah}:${inpAyat}`
                                        }

                                        client.reply(from, showQuranInfo(quranData), id);
                                        console.log(`[OK] ${from} Recieved Quran Data!`)

                                }).catch(err => {
                                        console.log(`[ERR] ${from} Input Wrong Surat/Ayah`, err);
                                })
                                break;
                        case '!listsurah':
                        client.reply(from, help, id)
                        break
                                  case '!lirik2':
                        case 'lyrics':
                                if(body.split(' ').slice(1)) {
                                        const query = body.split(' ').slice(1).join(' ').toString();
                                        const songData = await getLyrics(query);

                                        if(songData.lyrics !== undefined) {
                                                client.reply(from, `Hai ${pushname} Ini Lirik Yang Kamu Request ${songData.show}`, id)
                                                console.log(`[INFO] ${from} Recieved the lyrics`)
                                        } else {
                                                client.reply(from,`*@${senderId}* Pastikan kamu memasukkan Judul yang benar! 🤖`,id);
                                                console.log(`[FAIL] ${from} Failed recieve the lyrics`)
                                        }

                                } else {
                                        client.reply(from, `Pastikan kamu memasukkan Judul lagu! 🤖`, id)
                                        console.log(`[FAIL] ${from} Need Song Title`)
                                }
                                break;
                                 
       case "!mirip":
       const udin = body.slice(7)
                let mirip = [
                    "Mang Oleh",
                    "Monyet",
                    "Biawak",
                    "Buaya",
                    "Biji Naga",
                    "Babi",
                    "Upil Gajah",
                    "Semvak Rombeng",
                    "Odading",
                    "Anjing",
                    "Lucinta Luna",
                    "Ariel Noah",
                    "Komeng",
                    "Sule",
                    "Reza Arap",
                    "Bocil Epep",
                    "Piccolo",
                    "Selingkuhan DPR",
                    "Anaknya DPR",
                    "DPR",
                    "Bapaknya",
                    "Emaknya",
                    "Pentil Kucing",
                    "Kunyuk",
                    "Ikan Lele",
                    "Ngeteh Asw",
                    "Mang Garox",
                    "Yang Lek",
                    "Uzumaki Bayu",
                ];
                random = Math.floor(Math.random() * (mirip.length - 1) + 1);
                client.reply(from, `${udin} mirip dengan ${mirip[random]}`, id);
                break;

            case "!gay":
            const nama = body.slice(5)
                random = Math.floor(Math.random() * (1000 - 1) + 1);
                client.reply(from, `Tingkat Gay *${nama}* ${random}%`);
                break;
                        
                        case '!gombal':
                        case '!bucin':
                                client.reply(from, getGombal(), id);
                                break;
                                 case'!quran':
                        axios.get('https://api.banghasan.com/quran/format/json/acak').then((res) => {
                            const sr = /{(.*?)}/gi;
                            const hs = res.data.acak.id.ayat;
                            const ket = `${hs}`.replace(sr, '');
                            let hasil = `*[ ${ket} ]*   ${res.data.acak.ar.teks}\n\n${res.data.acak.id.teks}(QS.${res.data.surat.nama}, Ayat ${ket})\n\n_*Processing Sukses BOT NOLEP*_`;
                            client.sendText(from, hasil);
                        })
                        break
                        case '!artinama':
            case '!arti':
            if (args.length === 0)  return await client.reply(from, 'Kirim perintah !artinama <nama kamu>\nConntoh !artinama Dandi', id)
            const namamu = body.slice(5)
            const keyy = `oSDiGL-bx2kTP-5iKgyf-qUFTcg-FsmnHf`
            const artinama = await get.get(`https://api.i-tech.id/tools/arti?key=${keyy}=`+ namamu).json()
            console.log('Shortlink: ' + artinama)
            if (artinama.error) return await client.reply(from, artinama.error, id)
            const captionartinama = `Arti Nama: ${artinama.arti}`
            await client.reply(from, captionartinama, message.id)
            break
               case '!bijak':
                    const getBijak = await bijak()
                    client.sendText(from, getBijak, id);
                    break;
                case '#corona':
                    const result = await corona()
                    client.sendText(from, corona);
                    break;
                case '!artinama2':
                    if (args.length == 2) {
                        const nama = args[1]
                        const result = await artinama(nama)
                        client.sendText(from, result, id)
                    }
                    break;
                case '!weton':
                    if (args.length == 4) {
                        const tgl = args[1]
                        const bln = args[2]
                        const thn = args[3]
                        const result = await weton(tgl, bln, thn)
                        client.sendText(from, result, id)
                    }
                    break;
                case '/bpk':
                case '!bpk':
                    if (args.length == 2) {
                        const kata = args[1]
                        const result = await alay(kata)
                        client.sendText(from, result, id)
                    }
                    break;
                case '!namaninjaku':
                    if (args.length == 2) {
                        const nama = args[1]
                        const result = await namaninjaku(nama)
                        client.sendText(from, result)
                    }
                    break;
            case '!pantun' :
            client.reply(from, pantunn(), id)
            break
                         case 'speed':
                    case 'ping':
                        const timestamp = speed();
                        const latensi = speed() - timestamp
                        client.reply(`${latensi.toFixed(5)} detik`)
                    break
                    case '!surah':
                        if(!args.lenght >= 3) return
                        const dictzk = body.split(' ')[1];
                        const ayat = body.split(' ')[3];
                        surat(dictzk, ayat).then(hasil => {
                            reply(hasil)
                        }).catch(err => {
                            reply(err)
                        })
                    break
                    case'!bmkg':
                        axios.get('https://data.bmkg.go.id/autogempa.xml').then((res) => {
                            parseString(res.data, function (err, result) {
                                result = result.Infogempa.gempa[0];
                                let hasils = `_*Informasi Gempa BMKG*_
~> Tanggal : ${result.Tanggal}
~> Jam : ${result.Jam}
~> Magnitudo : ${result.Magnitude}
~> Kedalaman : ${result.Kedalaman}
~> Lintang : ${result.Lintang}
~> Bujur : ${result.Bujur}
~> Lokasi 1 : ${result.Wilayah1}
~> Lokasi 2 : ${result.Wilayah2}
~> Lokasi 3 : ${result.Wilayah3}
~> Lokasi 4 : ${result.Wilayah4}
~> Lokasi 5 : ${result.Wilayah5}
~> Potensi : ${result.Potensi}

_*Processing Sukses BOT NOLEP*_`
                                client.reply(from, hasils, id)
                        });})
                        break
        case 'koin':
        case '!koin':
          const side = Math.floor(Math.random() * 2) + 1
          if (side == 1) {
            client.sendStickerfromUrl(from, 'https://i.ibb.co/YTWZrZV/2003-indonesia-500-rupiah-copy.png', { method: 'get' })
          } else {
            client.sendStickerfromUrl(from, 'https://i.ibb.co/bLsRM2P/2003-indonesia-500-rupiah-copy-1.png', { method: 'get' })
          }
          break
            case'!corona':
                        function intl(str) {
                            var nf = Intl.NumberFormat();
                            return nf.format(str);
                        }
                        if(args[1]){
                            if(args[1] === 'prov'){
                                const province = body.slice(13).toLowerCase()
                                axios.get('https://indonesia-covid-19.mathdro.id/api/provinsi/').then(({data}) => {
                                    var founded = false
                                    data.data.find(i => {
                                        if(i.provinsi.toLowerCase() == province){
                                            founded = true
                                            client.sendText(from, `_*Kasus COVID19 di ${i.provinsi}*_
~> Positif : ${intl(i.kasusPosi)} kasus   
~> Sembuh : ${intl(i.kasusSemb)} kasus
~> Meninggal : ${intl(i.kasusMeni)} kasus

_*Tips kesehatan*_
- Mencuci tangan dengan benar
- Menggunakan masker
- Menjaga daya tahan tubuh
- Menerapkan physical distancing

_*BOT NOLEP Information*_`, id)
                                        }
                                    })
                                    if(founded == false) return client.sendText(from, `Provinsi ${province} tidak valid, gunakan format formal seperti : DKI Jakarta`)
                                })
                            }
                        }else{
                            corona().then(hasilCorona => {
                                client.sendText(from, hasilCorona)
                                limitAdd(serial)
                            }).catch(err => {
                                console.log(err)
                            })
                        }
                        break
           case '!cekresi':
                        if(!args.lenght >= 3 ) return
                        let kurir = args[2];
                        let resi = args[1];
                        let courir = ['jne', 'pos', 'jnt', 'sicepat', 'tiki', 'anteraja', 'wahana', 'ninja', 'lion', 'lek'];
                        let chkKurir = courir.includes(kurir.toLowerCase());
                        if (chkKurir === true) {
                            const apikeys = () => {
                                const ran = Math.floor(Math.random() * 3);
                                switch (ran) {
                                    case 0:
                                        return 'getApiKeyAt : binderbyte.com'
                                    case 1:
                                        return 'getApiKeyAt : binderbyte.com'
                                    case 2:
                                        return 'getApiKeyAt : binderbyte.com'
                                }
                            }
                            axios.get(`https://api.binderbyte.com/cekresi?awb=${resi}&api_key=${apikeys()}&courier=${kurir}`).then((res) => {
                                if (res.data.result === true) {
                                    client.sendText(from,'Sedang diproses...')
                                    let bn = res.data.data;
                                    let hasil = `╭──────[ Informasi Tracking ]──────\n├> Kurir   : ${bn.courier}\n├> Resi    : ${bn.waybill}\n├> Dikirim : ${bn.shipped}`;
                                    if (bn.received !== '' || bn.received !== null || bn.received !== undefined || bn.received !== '') {
                                        hasil += `\n├> Diterima Oleh : ${bn.received.name}\n├> Tanggal : ${bn.received.date}\n├> Status : ${bn.received.status}`;
                                    }
                                    hasil += `\n├────────────────\n├> Tracking : `;
                                    let track = bn.tracking;
                                    Object.keys(track).reverse().forEach(function (i) {
                                        hasil += `\n├────────────────\n├> Tanggal   : ${track[i].date}\n├> Deskripsi : ${track[i].desc}\n├> Status    : ${track[i].status}\n├────────────────`;
                                    });
                                    hasil += '\n╰──[ BOT NOLEP ]───';
                                    client.sendText(from,hasil);
                                } else {
                                    client.sendText(from,'Kode resi invalid / kadaluarsa');
                                }
                            }).catch(err => {
                                console.log(err)
                                client.sendText(from,'Server sedang dalam masalah, coba lagi nanti');
                            })
                        } else {
                            client.sendText(from,`Kurir ${kurir} tidak ada atau penulisan salah!`);
                            client.sendText(from,'Contoh kurir : jne, pos, jnt, sicepat, tiki, anteraja, wahana, ninja, lion, lek');
                        }
                        break
            /*case '!translate':
                        if(args[1] == undefined || args[2] == undefined) return
                        if(args.length >= 2){
                            var codelang = args[1]
                            var text = body.slice(11+codelang.length);
                            translatte(text, {to: codelang}).then(res => {
                                client.sendText(from,res.text);
                            }).catch(err => {
                                client.sendText(from,`[ERROR] Teks tidak ada, atau kode bahasa ${codelang} tidak support\n~> *${prefix}bahasa* untuk melihat list kode bahasa`);
                            });
                        }
                    break*/
           case "!covid19":
                let countryCode = body.split(" ").slice(1, 2).toString();
                let covidDataResult = {};
                getCovidInfo(`${countryCode !== "" ? countryCode : ""}`)
                    .then((res) => {
                        covidDataResult = {
                            confirmed: res.confirmed.value,
                            recovered: res.recovered.value,
                            deaths: res.deaths.value,
                        };
                        if (countryCode !== "")
                            covidDataResult.name = countryCode;
                        console.log(`[OK] ${from} request Covid Info`);
                        client.reply(from, showCovidInfo(covidDataResult), id);
                    })
                    .catch((err) => {
                        console.log(
                            `[ERR] ${from} Error when Request Covid Info`
                        );
                    });
                break;
        case 'dadu':
        case '!dadu':
          const dice = Math.floor(Math.random() * 6) + 1
          await client.sendStickerfromUrl(from, 'https://www.random.org/dice/dice' + dice + '.png', { method: 'get' })
          break
            case '/reverse':
            case '!reverse':
                if (args.length < 1) return client.reply(from, '⚠️ Format salah! Ketik *!tutor* untuk penggunaan.')
                await client.sendText(from, args.join(' ').split('').reverse().join(''))
            break
             case 'clock':
            case 'jam':
            case '!waktu':
                await client.sendText(from, `Waktu Indonesia Barat: *${moment().utcOffset('+0700').format('HH:mm')}* WIB \nWaktu Indonesia Tengah: *${moment().utcOffset('+0800').format('HH:mm')}* WITA \nWaktu Indonesia Timur: *${moment().utcOffset('+0900').format('HH:mm')}* WIT`)
            break
             case '/say':
            const sayMessage = body.slice(5)
            if (!sayMessage) return client.reply(from, ':v')
            await client.sendText(from, sayMessage)
            break
             case 'binary':
            case 'bin':
            case '!biner':
                exports.method = {
                    encode: input => {
                        return input.toString().split('').map(c => c.charCodeAt(0).toString(2))
                    }
                }
                const input = args.join(' ')
                if (!input) {
                    return client.reply(from, '⚠️ Harap masukan teks! [WRONG FORMAT]', id)
                } else {
                    client.sendText(from, this.method.encode(input).join(' '))
                }
            break
             case '/curse':
                const userText = args.join(' ')
                if (!userText) {
                    return client.reply(from, '⚠️ Harap masukkan teks! [WRONG FORMAT]', id)
                } else {
                client.sendText(from, curse(userText))
                }
            break
            case '!lenny':
                client.sendText(from, '( ͡° ͜ʖ ͡°)', id)
            break
            case '!md5':
                const yourText = args.join(' ')
                if (!yourText) {
                    return client.reply(from, '⚠️ Harap masukkan teks!. [WRONG FORMAT]', id)
                } else {
                    client.sendText(from, md5(yourText))
                }
            break
            case 'mocking':
            case '!mock':
                const textMock = word => word.split('').map(c => Math.random() > 0.5 ? c.toUpperCase() : c.toLowerCase()).join('')
                if (args.length < 1) {
                    return client.reply(from, '⚠️ Harap masukkan teks!. [WRONG FORMAT]', id)
                } else {
                    client.sendText(from, args.map(textMock).join(' '))
                }
            break
             case 'profile':
             case '!me':
            var role = 'None'
            if (isGroupMsg) {
              if (!quotedMsg) {
              var block = ban.includes(author)
              var pic = await client.getProfilePicFromServer(author)
              var namae = pushname
              var sts = await client.getStatus(author)
              var adm = isGroupAdmins
              const { status } = sts
               if (pic == undefined) {
               var pfp = errorurl 
               } else {
               var pfp = pic
               } 
             await client.sendFileFromUrl(from, pfp, 'pfp.jpg', `*User Profile* ✨️ \n\n 🔖️ *Username: ${namae}*\n\n💌️ *User Info: ${status}*\n\n*💔️ Ban: ${block}*\n\n✨️ *Role: ${role}*\n\n 👑️ *Admin: ${adm}*`)
             } else if (quotedMsg) {
             var qmid = quotedMsgObj.sender.id
             var block = ban.includes(qmid)
             var pic = await client.getProfilePicFromServer(qmid)
             var namae = quotedMsgObj.sender.name
             var sts = await client.getStatus(qmid)
             var adm = isGroupAdmins
             const { status } = sts
              if (pic == undefined) {
              var pfp = errorurl 
              } else {
              var pfp = pic
              } 
             await client.sendFileFromUrl(from, pfp, 'pfo.jpg', `*User Profile* ✨️ \n\n 🔖️ *Username: ${namae}*\n💌️ *User Info: ${status}*\n*💔️ Ban: ${block}*\n✨️ *Role: ${role}*\n 👑️ *Admin: ${adm}*`)
             }
            }
            break
            case 'cgc':
            arg = body.trim().split(' ')
            const gcname = arg[1]
            client.createGroup(gcname, mentionedJidList)
            client.sendText(from, 'Group Created ✨️')
            break
             case '!covid':
            arg = body.trim().split(' ')
            console.log(...arg[1])
            var slicedArgs = Array.prototype.slice.call(arg, 1);
            console.log(slicedArgs)
            const country = await slicedArgs.join(' ')
            console.log(country)
            const response2 = await axios.get('https://coronavirus-19-api.herokuapp.com/countries/' + country + '/')
            const { cases, todayCases, deaths, todayDeaths, active } = response2.data
                await client.sendText(from, '🌎️Covid Info -' + country + ' 🌍️\n\n✨️Total Cases: ' + `${cases}` + '\n📆️Today\'s Cases: ' + `${todayCases}` + '\n☣️Total Deaths: ' + `${deaths}` + '\n☢️Today\'s Deaths: ' + `${todayDeaths}` + '\n⛩️Active Cases: ' + `${active}` + '.')
            break
         case "gstat":
                    console.log("gstat");
                    let groupData = {
                        owner: chat.groupMetadata.owner.split("@")[0],
                        name: chat.name,
                        cMember: chat.groupMetadata.participants.length,
                        desc: chat.groupMetadata.desc,
                    };
                    const { owner, name, cMember, desc } = groupData;
                    client.sendTextWithMentions(
                        from,
                        `Hai @${senderId} Selamat Datang 👋!\n🐻 *Tentang Group*\n\n*Nama Group* : ${name}\n*Owner* : @${owner}\n*Total Member* : ${cMember}\n*Deskripsi* : \n${desc}\n\nTerima Kasih,\nGunakan Command *!gmenu* untuk membuka semua perintah bot pada grup ini. 🦧`,
                        id
                    );
                    break;
        case '!magernulis':
        client.reply(from, ` Hai ${pushname} Ini Adalah Menu Mager Nulis:\n1./magernulis1 [TEKS]\n2./magernulis2 [TEKS]`, id)
        break
           case '/magernulis1':
            if (args.length === 1) return client.reply(from, 'Kirim perintah */magernulis1 [teks]*', id)
            const text = body.slice(13)
            client.reply(from, mess.wait, id)
            const splitText = text.replace(/(\S+\s*){1,10}/g, '$&\n')
            const fixHeight = splitText.split('\n').slice(0, 25).join('\n')
            spawn('convert', [
                './media/img/before.jpg',
                '-font',
                'Indie-Flower',
                '-size',
                '700x960',
                '-pointsize',
                '25',
                '-interline-spacing',
                '1',
                '-annotate',
                '+170+222',
                fixHeight,
                './media/img/after.jpg'
            ])
            .on('error', () => client.reply(from, 'Error gan', id))
            .on('exit', () => {
                client.sendImage(from, './media/img/after.jpg', 'nulis.jpg', `Neh ${pushname}`, id)
            })
            break
        case '/magernulis2':
           if (args.length === 1) return await client.reply(from, 'Kirim perintah */magernulis2 [teks]*', id)
            const text2 = body.slice(12)
            await client.reply(from, mess.wait, id)
            const splitText2 = text2.replace(/(\S+\s*){1,10}/g, '$&\n')
            const fixHeight2 = splitText2.split('\n').slice(0, 33).join('\n')
            var months = ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember'];
            var myDays = ['Minggu', 'Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat', 'Sabtu'];
            var date = new Date();
            var day = date.getDate();
            var month = date.getMonth();
            var thisDay = date.getDay(),
                thisDay = myDays[thisDay];
            var yy = date.getYear();
            var year = (yy < 1000) ? yy + 1900 : yy;
            const waktu = (day + ' ' + months[month] + ' ' + year)
            const hari = (thisDay)
            spawn('convert', [
                './mager/sedurunge.jpg',
                '-font',
                'Indie-Flower',
                '-size',
                '700x960',
                '-pointsize',
                '100',
                '-interline-spacing',
                '1',
                '-annotate',
                '+4100+460',
                hari,
                '-font',
                'Indie-Flower',
                '-size',
                '700x960',
                '-pointsize',
                '100',
                '-interline-spacing',
                '1',
                '-annotate',
                '+4100+640',
                waktu,
                '-font',
                'Indie-Flower',
                '-size',
                '6000x8000',
                '-pointsize',
                '130',
                '-interline-spacing',
                '1',
                '-annotate',
                '+1010+1010',
                fixHeight2,
                './mager/seuwise.jpg'
            ])
            .on('error', () => client.reply(from, 'Error gan', id))
            .on('exit', () => {
                client.sendImage(from, './mager/seuwise.jpg', 'nulis.jpg', `Nih ${pushname}`, id)
            })
            break
        /*case '!nulis':
        case '!write':
            if (args.length === 1) return client.reply(from, 'Kirim perintah *nulis [teks]*', id)
            const text = body.slice(7)
            client.reply(from, `Bentar W Tulis Dulu`, id)
            const splitText = text.replace(/(\S+\s*){1,10}/g, '$&\n')
            const fixHeight = splitText.split('\n').slice(0, 25).join('\n')
            spawn('convert', [
                './media/img/before.jpg',
                '-font',
                'Indie-Flower',
                '-size',
                '700x960',
                '-pointsize',
                '25',
                '-interline-spacing',
                '1',
                '-annotate',
                '+170+222',
                fixHeight,
                './media/img/after.jpg'
            ])
            .on('error', () => client.reply(from, 'Error gan', id))
            .on('exit', () => {
                client.sendImage(from, './media/img/after.jpg', 'nulis.jpg', `Dasar ${pushname} Mager Amat Anjing`, id)
            })
            break*/
        case '!ytmp3':
        case 'down':
           if (args.length === 1) return client.reply(from, 'Kirim perintah *!ytmp3 [linkYt]*, untuk contoh silahkan kirim perintah *!readme*')
            let isLinks = args[1].match(/(?:https?:\/{2})?(?:w{3}\.)?youtu(?:be)?\.(?:com|be)(?:\/watch\?v=|\/)([^\s&]+)/)
            if (!isLinks) return client.reply(from, mess.error.Iv, id)
            try {
                client.reply(from, 'Kalo Download Lebih Dari 20 Menit,Gausah Pake Bot Ya Bodohh', id)
                const resp = await get.get('https://mhankbarbar.herokuapp.com/api/yta?url='+ args[1]).json()
                if (resp.error) {
                    client.reply(from, resp.error, id)
                } else {
                    const { title, thumb, filesize, result } = await resp
                    if (Number(filesize.split(' MB')[0]) >= 30.00) return client.reply(from, 'Maaf durasi video sudah melebihi batas maksimal!', id)
                    client.sendFileFromUrl(from, thumb, 'thumb.jpg', `➸ *Title* : ${title}\n➸ *Filesize* : ${filesize}\n\nSilahkan tunggu sebentar proses pengiriman file membutuhkan waktu beberapa menit.`, id)
                    await client.sendFileFromUrl(from, result, `${title}.mp3`, '', id).catch(() => client.reply(from, mess.error.Yt3, id))
                }
            } catch (err) {
                client.sendText(ownerNumber, 'Error ytmp3 : '+ err)
                client.reply(from, mess.error.Yt3, id)
            }
            break
        case '!ytmp4':
        case 'ytv':
           if (args.length === 1) return client.reply(from, 'Kirim perintah *!ytmp4 [linkYt]*, untuk contoh silahkan kirim perintah *!readme*')
            let isLin = args[1].match(/(?:https?:\/{2})?(?:w{3}\.)?youtu(?:be)?\.(?:com|be)(?:\/watch\?v=|\/)([^\s&]+)/)
            if (!isLin) return client.reply(from, mess.error.Iv, id)
            try {
                client.reply(from, 'Kalo Download Video Berjam",Jangan Pake Bot Ya🙄', id)
                const ytv = await get.get('https://mhankbarbar.herokuapp.com/api/ytv?url='+ args[1]).json()
                if (ytv.error) {
                    client.reply(from, ytv.error, id)
                } else {
                    if (Number(ytv.filesize.split(' MB')[0]) > 40.00) return client.reply(from, 'Maaf durasi video sudah melebihi batas maksimal!', id)
                 client.sendFileFromUrl(from, ytv.thumb, 'thumb.jpg', `➸ *Title* : ${ytv.title}\n➸ *Filesize* : ${ytv.filesize}\n\nSilahkan tunggu sebentar proses pengiriman file membutuhkan waktu beberapa menit.`, id)
                    await client.sendFileFromUrl(from, ytv.result, `${ytv.title}.mp4`, '', id).catch(() => client.reply(from, mess.error.Yt4, id))
                }
            } catch (er) {
                client.sendText(ownerNumber, 'Error ytmp4 : '+ er)
                client.reply(from, mess.error.Yt4, id)
            }
            break
        case '!wiki':
            if (args.length === 1) return client.reply(from, 'Kirim perintah *!wiki [query]*\nContoh : *!wiki asu*', id)
            const query_ = body.slice(6)
            const wiki = await get.get('https://mhankbarbar.herokuapp.com/api/wiki?q='+ query_).json()
            if (wiki.error) {
                client.reply(from, wiki.error, id)
            } else {
                client.reply(from, `➸ *Query* : ${query_}\n\n➸ *Result* : ${wiki.result}`, id)
            }
            break
        case '!cuaca':
            if (args.length === 1) return client.reply(from, 'Kirim perintah *!cuaca [tempat]*\nContoh : *!cuaca tangerang*', id)
            const tempat = body.slice(7)
            const weather = await get.get('https://mhankbarbar.herokuapp.com/api/cuaca?q='+ tempat).json()
            if (weather.error) {
                client.reply(from, weather.error, id)
            } else {
                client.reply(from, `➸ Tempat : ${weather.result.tempat}\n\n➸ Angin : ${weather.result.angin}\n➸ Cuaca : ${weather.result.cuaca}\n➸ Deskripsi : ${weather.result.desk}\n➸ Kelembapan : ${weather.result.kelembapan}\n➸ Suhu : ${weather.result.suhu}\n➸ Udara : ${weather.result.udara}`, id)
            }
            break
        case '!fb':
            if (args.length === 1) return client.reply(from, 'Kirim perintah *!fb [linkFb]* untuk contoh silahkan kirim perintah *!readme*', id)
            if (!args[1].includes('facebook.com')) return client.reply(from, mess.error.Iv, id)
            client.reply(from, mess.wait, id)
            const epbe = await fb(args[1])
            client.sendFileFromUrl(from, epbe.url, `Cuih${epbe.exts}`, epbe.capt, id)
            break
        case '!creator':
        case '!owner':
            client.sendContact(from, '6289636035164@c.us')
            break
        case '!ig':
            if (args.length === 1) return client.reply(from, 'Kirim perintah *!ig [linkIg]* untuk contoh silahkan kirim perintah *!readme*')
            if (!args[1].match(isUrl) && !args[1].includes('instagram.com')) return client.reply(from, mess.error.Iv, id)
            try {
                client.reply(from, mess.wait, id)
                const resp = await get.get('https://mhankbarbar.herokuapp.com/api/ig?url='+ args[1]).json()
                if (resp.result.includes('.mp4')) {
                    var ext = '.mp4'
                } else {
                    var ext = '.jpg'
                }
                await client.sendFileFromUrl(from, resp.result, `igeh${ext}`, 'Instagram Downloader © Bot Nolep', id)
            } catch {
                client.reply(from, mess.error.Ig, id)
                }
            break
             case '!simi':
             if (!isGroupAdmins) return
             if(!isGroupMsg) return client.reply(from, 'Perinyah ini hanya bisa digunakan didalam grup!', id)
             if (args.length === 1) return client.reply(from, 'Pilih enable atau disable!', id)
            if (args[1].toLowerCase() === 'on') {
                nsfw_.push(chat.id)
                fs.writeFileSync('./lib/NSFW.json', JSON.stringify(nsfw_))
                client.reply(from, 'Chat Bot SimSimi di aktifkan di group ini!, silahkan memulai percakapan dengan simi diawali huruf s', id)
            } else if (args[1].toLowerCase() === 'off') {
                nsfw_.splice(chat.id, 1)
                fs.writeFileSync('./lib/NSFW.json', JSON.stringify(nsfw_))
                client.reply(from, 'Chat Bot SimSimi berhasil di nonaktifkan di group ini!', id)
            } else {
                client.reply(from, 'Pilih enable atau disable udin!', id)
            }
            break
        case '!welcome':
            if (!isGroupMsg) return client.reply(from, 'Perintah ini hanya bisa di gunakan dalam group!', id)
            if (!isGroupAdmins) return client.reply(from, 'Perintah ini hanya bisa di gunakan oleh Admin group!', id)
            if (args.length === 1) return client.reply(from, 'Pilih enable atau disable!', id)
            if (args[1].toLowerCase() === 'enable') {
                welkom.push(chat.id)
                fs.writeFileSync('./lib/welcome.json', JSON.stringify(welkom))
                client.reply(from, 'Fitur welcome berhasil di aktifkan di group ini!', id)
            } else if (args[1].toLowerCase() === 'disable') {
                welkom.splice(chat.id, 1)
                fs.writeFileSync('./lib/welcome.json', JSON.stringify(welkom))
                client.reply(from, 'Fitur welcome berhasil di nonaktifkan di group ini!', id)
            } else {
                client.reply(from, 'Pilih enable atau disable udin!', id)
            }
            break
        case '!nsfwmenu':
            if (!isNsfw) return
            client.reply(from, '1. !randomHentai\n2. !randomNsfwNeko', id)
            break
        case '!igstalk':
            if (args.length === 1)  return client.reply(from, 'Kirim perintah *!igStalk @username*\nConntoh *!igStalk @duar_amjay*', id)
            const stalk = await get.get('https://mhankbarbar.herokuapp.com/api/stalk?username='+ args[1]).json()
            if (stalk.error) return client.reply(from, stalk.error, id)
            const { Biodata, Jumlah_Followers, Jumlah_Following, Jumlah_Post, Name, Username, Profile_pic } = stalk
            const caps = `➸ *Nama* : ${Name}\n➸ *Username* : ${Username}\n➸ *Jumlah Followers* : ${Jumlah_Followers}\n➸ *Jumlah Following* : ${Jumlah_Following}\n➸ *Jumlah Postingan* : ${Jumlah_Post}\n➸ *Biodata* : ${Biodata}`
            await client.sendFileFromUrl(from, Profile_pic, 'Profile.jpg', caps, id)
            break
        case '!infogempa':
            const bmkg = await get.get('https://mhankbarbar.herokuapp.com/api/infogempa').json()
            const { potensi, koordinat, lokasi, kedalaman, magnitude, jam, map } = bmkg
            const hasil = `*${waktu}*\n📍 *Lokasi* : *${lokasi}*\n〽️ *Kedalaman* : *${kedalaman}*\n💢 *Magnitude* : *${magnitude}*\n🔘 *Potensi* : *${potensi}*\n📍 *Koordinat* : *${koordinat}*`
            client.sendFileFromUrl(from, map, 'shakemap.jpg', hasil, id)
            break
        case '!anime':
            if (args.length === 1) return client.reply(from, 'Kirim perintah *!anime [query]*\nContoh : *!anime darling in the franxx*', id)
            const animek = await get.get('https://mhankbarbar.herokuapp.com/api/dewabatch?q=' + body.slice(7)).json()
            if (animek.error) return client.reply(from, animek.error, id)
            const res_animek = `${animek.result}\n\n${animek.sinopsis}`
            client.sendFileFromUrl(from, animek.thumb, 'dewabatch.jpg', res_animek, id)
            break
        case '!brainly':
            if (args.length >= 2){
                const BrainlySearch = require('./lib/brainly')
                let tanya = body.slice(9)
                let jum = Number(tanya.split('.')[1]) || 2
                if (jum > 10) return client.reply(from, 'Max 10!', id)
                if (Number(tanya[tanya.length-1])){
                    tanya
                }
                client.reply(from, `➸ *Pertanyaan* : ${tanya.split('.')[0]}\n\n➸ *Jumlah jawaban* : ${Number(jum)}`, id)
                await BrainlySearch(tanya.split('.')[0],Number(jum), function(res){
                    res.forEach(x=>{
                        if (x.jawaban.fotoJawaban.length == 0) {
                            client.reply(from, `➸ *Pertanyaan* : ${x.pertanyaan}\n\n➸ *Jawaban* : ${x.jawaban.judulJawaban}\n`, id)
                        } else {
                            client.reply(from, `➸ *Pertanyaan* : ${x.pertanyaan}\n\n➸ *Jawaban* 〙: ${x.jawaban.judulJawaban}\n\n➸ *Link foto jawaban* : ${x.jawaban.fotoJawaban.join('\n')}`, id)
                        }
                    })
                })
            } else {
                client.reply(from, 'Usage :\n!brainly [pertanyaan] [.jumlah]\n\nEx : \n!brainly NKRI .2', id)
            }
            break
        case '!wait':
            if (isMedia && type === 'image' || quotedMsg && quotedMsg.type === 'image') {
                if (isMedia) {
                    var mediaData = await decryptMedia(message, uaOverride)
                } else {
                    var mediaData = await decryptMedia(quotedMsg, uaOverride)
                }
                const fetch = require('node-fetch')
                const imgBS4 = `data:${mimetype};base64,${mediaData.toString('base64')}`
                client.reply(from, 'Searching....', id)
                fetch('https://trace.moe/api/search', {
                    method: 'POST',
                    body: JSON.stringify({ image: imgBS4 }),
                    headers: { "Content-Type": "application/json" }
                })
                .then(respon => respon.json())
                .then(resolt => {
                	if (resolt.docs && resolt.docs.length <= 0) {
                		client.reply(from, 'Maaf, saya tidak tau ini anime apa', id)
                	}
                    const { is_adult, title, title_chinese, title_romaji, title_english, episode, similarity, filename, at, tokenthumb, anilist_id } = resolt.docs[0]
                    teks = ''
                    if (similarity < 0.92) {
                    	teks = '*Saya memiliki keyakinan rendah dalam hal ini* :\n\n'
                    }
                    teks += `➸ *Title Japanese* : ${title}\n➸ *Title chinese* : ${title_chinese}\n➸ *Title Romaji* : ${title_romaji}\n➸ *Title English* : ${title_english}\n`
                    teks += `➸ *Ecchi* : ${is_adult}\n`
                    teks += `➸ *Eps* : ${episode.toString()}\n`
                    teks += `➸ *Kesamaan* : ${(similarity * 100).toFixed(1)}%\n`
                    var video = `https://media.trace.moe/video/${anilist_id}/${encodeURIComponent(filename)}?t=${at}&token=${tokenthumb}`;
                    client.sendFileFromUrl(from, video, 'nimek.mp4', teks, id).catch(() => {
                        client.reply(from, teks, id)
                    })
                })
                .catch(() => {
                    client.reply(from, 'Error !', id)
                })
            } else {
                client.sendFile(from, './media/img/tutod.jpg', 'Tutor.jpg', 'Neh contoh mhank!', id)
            }
            break
        case '!quotemaker':
        case '!qmaker':
            arg = body.trim().split('|')
            if (arg.length >= 4) {
                await client.reply(from, mess.wait, id)
                const quotes = arg[1]
                const author = arg[2]
                const theme = arg[3]
                await quotemaker(quotes, author, theme).then(amsu => {
                    client.sendFile(from, amsu, 'quotesmaker.jpg',`Quotes by ${pushname}`, id).then(cih => console.log(cih)).catch(err => {
                       client.reply(from, mess.error.Qm, id)
                    })
                })
            } else {
                await client.reply(from, 'Usage: \n!qmaker |teks|watermark|theme\n\nEx :\n!qmaker |ini contoh|bicit|random', id)
            }
            break
        /*case '!linkgroup':
            if (!isBotGroupAdmins) return client.reply(from, 'Perintah ini hanya bisa di gunakan ketika bot menjadi admin', id)
            if (isGroupMsg) {
                const inviteLink = await client.getGroupInviteLink(groupId);
                client.sendLinkWithAutoPreview(from, inviteLink, `\nLink group *${name}*`)
            } else {
            	client.reply(from, 'Perintah ini hanya bisa di gunakan dalam group!', id)
            }
            break*/
        case '!bc':
            if (!isOwner) return client.reply(from, 'Perintah ini hanya untuk Owner bot!', id)
            let msg = body.slice(4)
            const chatz = await client.getAllChatIds()
            for (let ids of chatz) {
                var cvk = await client.getChatById(ids)
                if (!cvk.isReadOnly) await client.sendText(ids, `[ BOT NOLEP BROADCAST ]\n\n${msg}`)
            }
            client.reply(from, 'Broadcast Success!', id)
            break
        case '!adminlist':
        case '!listadmin':
            if (!isGroupMsg) return client.reply(from, 'Perintah ini hanya bisa di gunakan dalam group!', id)
            let mimin = ''
            for (let admon of groupAdmins) {
                mimin += `➸ @${admon.replace(/@c.us/g, '')}\n` 
            }
            await sleep(2000)
            await client.sendTextWithMentions(from, mimin)
            break
        case '!ownergroup':
            if (!isGroupMsg) return client.reply(from, 'Perintah ini hanya bisa di gunakan dalam group!', id)
            const Owner_ = chat.groupMetadata.owner
            await client.sendTextWithMentions(from, `Owner Group : @${Owner_}`)
            break
     case '!mentionall':
        case '!absen':
        case '!tagall':
        case '!getall':
            if (!isGroupMsg) return await client.reply(from, 'Perintah ini hanya bisa di gunakan dalam group!', id)
            if (!isGroupAdmins) return await client.reply(from, 'Perintah ini hanya bisa di gunakan oleh admin group', id)
            const groupMem = await client.getGroupMembers(groupId)
            let hehe = 'क══════क HALO BEBAN ORANG TUA क══════क\n'
            for (let i = 0; i < groupMem.length; i++) {
                hehe += '≽'
                hehe += ` @${groupMem[i].id.replace(/@c.us/g, '')}\n`
            }
            hehe += 'क══════क BOT NOLEP क══════क'
            await sleep(2000)
            await client.sendTextWithMentions(from, hehe)
            break
        case '!kickall':
            if (!isGroupMsg) return client.reply(from, 'Perintah ini hanya bisa di gunakan dalam group!', id)
            const isGroupOwner = sender.id === chat.groupMetadata.owner
            if (!isGroupOwner) return client.reply(from, 'Perintah ini hanya bisa di gunakan oleh Owner group', id)
            if (!isBotGroupAdmins) return client.reply(from, 'Perintah ini hanya bisa di gunakan ketika bot menjadi admin', id)
            const allMem = await client.getGroupMembers(groupId)
            for (let i = 0; i < allMem.length; i++) {
                if (groupAdmins.includes(allMem[i].id)) {
                    console.log('Upss this is Admin group')
                } else {
                    await client.removeParticipant(groupId, allMem[i].id)
                }
            }
            client.reply(from, 'Succes kick all member', id)
            break
        case '!leaveall':
            if (!isOwner) return client.reply(from, 'Perintah ini hanya untuk Owner bot', id)
            const allChats = await client.getAllChatIds()
            const allGroups = await client.getAllGroups()
            for (let gclist of allGroups) {
                await client.sendText(gclist.contact.id, `Maaf bot sedang pembersihan, total chat aktif : ${allChats.length}`)
                await client.leaveGroup(gclist.contact.id)
            }
            client.reply(from, 'Succes leave all group!', id)
            break
        case '!clearall':
            if (!isOwner) return client.reply(from, 'Perintah ini hanya untuk Owner bot', id)
            const allChatz = await client.getAllChats()
            for (let dchat of allChatz) {
                await client.deleteChat(dchat.id)
            }
            client.reply(from, 'Succes clear all chat!', id)
            break
        case '!add':
            const orang = args[1]
            if (!isGroupMsg) return client.reply(from, 'Fitur ini hanya bisa di gunakan dalam group', id)
            if (args.length === 1) return client.reply(from, 'Untuk menggunakan fitur ini, kirim perintah *!add* 628xxxxx', id)
            if (!isGroupAdmins) return client.reply(from, 'Perintah ini hanya bisa di gunakan oleh admin group', id)
            if (!isBotGroupAdmins) return client.reply(from, 'Perintah ini hanya bisa di gunakan ketika bot menjadi admin', id)
            try {
                await client.addParticipant(from,`${orang}@c.us`)
            } catch {
                client.reply(from, mess.error.Ad, id)
            }
            break
        case '!kick':
            if (!isGroupMsg) return client.reply(from, 'Fitur ini hanya bisa di gunakan dalam group', id)
            if (!isGroupAdmins) return client.reply(from, 'Perintah ini hanya bisa di gunakan oleh admin group', id)
            if (!isBotGroupAdmins) return client.reply(from, 'Perintah ini hanya bisa di gunakan ketika bot menjadi admin', id)
            if (mentionedJidList.length === 0) return client.reply(from, 'Untuk menggunakan Perintah ini, kirim perintah *!kick* @tagmember', id)
            await client.sendText(from, `Bismillah Saatnya Menendang :\n${mentionedJidList.join('\n')}`)
            for (let i = 0; i < mentionedJidList.length; i++) {
                if (groupAdmins.includes(mentionedJidList[i])) return client.reply(from, mess.error.Ki, id)
                await client.removeParticipant(groupId, mentionedJidList[i]).then(() => client.sendText(from, 'Aowkwkwkw Mampus Kena Kick', id))
            }
            break
        case '!leave':
            if (!isGroupMsg) return client.reply(from, 'Perintah ini hanya bisa di gunakan dalam group', id)
            if (!isGroupAdmins) return client.reply(from, 'Perintah ini hanya bisa di gunakan oleh admin group', id)
            await client.sendText(from,'Sayonara').then(() => client.leaveGroup(groupId))
            break
        case '!promote':
        case '!pm':
            if (!isGroupMsg) return client.reply(from, 'Fitur ini hanya bisa di gunakan dalam group', id)
            if (!isGroupAdmins) return client.reply(from, 'Fitur ini hanya bisa di gunakan oleh admin group', id)
            if (!isBotGroupAdmins) return client.reply(from, 'Fitur ini hanya bisa di gunakan ketika bot menjadi admin', id)
            if (mentionedJidList.length === 0) return client.reply(from, 'Untuk menggunakan fitur ini, kirim perintah *!promote* @tagmember', id)
            if (mentionedJidList.length >= 2) return client.reply(from, 'Maaf, perintah ini hanya dapat digunakan kepada 1 user.', id)
            if (groupAdmins.includes(mentionedJidList[0])) return client.reply(from, 'Maaf, user tersebut sudah menjadi admin.', id)
            await client.promoteParticipant(groupId, mentionedJidList[0])
            await client.sendTextWithMentions(from, `Anjay Si @${mentionedJidList[0]} Naek Jabatan sebagai admin.`)
            break
        case '!demote':
        case '!dm':
            if (!isGroupMsg) return client.reply(from, 'Fitur ini hanya bisa di gunakan dalam group', id)
            if (!isGroupAdmins) return client.reply(from, 'Fitur ini hanya bisa di gunakan oleh admin group', id)
            if (!isBotGroupAdmins) return client.reply(from, 'Fitur ini hanya bisa di gunakan ketika bot menjadi admin', id)
            if (mentionedJidList.length === 0) return client.reply(from, 'Untuk menggunakan fitur ini, kirim perintah *!demote* @tagadmin', id)
            if (mentionedJidList.length >= 2) return client.reply(from, 'Maaf, perintah ini hanya dapat digunakan kepada 1 orang.', id)
            if (!groupAdmins.includes(mentionedJidList[0])) return client.reply(from, 'Maaf, user tersebut tidak menjadi admin.', id)
            await client.demoteParticipant(groupId, mentionedJidList[0])
            await client.sendTextWithMentions(from, `Yahahaha Lengser @${mentionedJidList[0]}.`)
            break
        case 'oi':
            if (args.length === 1) return client.reply(from, 'Kirim perintah *!join* linkgroup\n\nEx:\n!join https://chat.whatsapp.com/blablablablablabla', id)
            const link = body.slice(6)
            const tGr = await client.getAllGroups()
            const minMem = 1
            const isLink = link.match(/(https:\/\/chat.whatsapp.com)/gi)
            const check = await client.inviteInfo(link)
            if (!isLink) return client.reply(from, 'Ini link? 👊🤬', id)
            if (tGr.length > 15) return client.reply(from, 'Maaf jumlah group sudah maksimal!', id)
            if (check.size < minMem) return client.reply(from, 'Member group tidak melebihi 30, bot tidak bisa masuk', id)
            if (check.status === 200) {
                await client.joinGroupViaLink(link).then(() => client.reply(from, 'Bot akan segera masuk!'))
            } else {
                client.reply(from, 'Link group tidak valid!', id)
            }
            break
        case '!delete':
        case '!del':
            if (!isGroupMsg) return client.reply(from, 'Fitur ini hanya bisa di gunakan dalam group', id)
            if (!isGroupAdmins) return client.reply(from, 'Fitur ini hanya bisa di gunakan oleh admin group', id)
            if (!quotedMsg) return client.reply(from, 'Salah!!, kirim perintah *!delete [tagpesanbot]*', id)
            if (!quotedMsgObj.fromMe) return client.reply(from, 'Salah!!, Bot tidak bisa mengahpus chat user lain!', id)
            client.deleteMessage(quotedMsgObj.chatId, quotedMsgObj.id, false)
            break
        case '!getses':
            const sesPic = await client.getSnapshot()
            client.sendFile(from, sesPic, 'session.png', 'Neh...', id)
            break
        case '!lirik':
            if (args.length == 1) return client.reply(from, 'Kirim perintah *!lirik [optional]*, contoh *!lirik aku bukan boneka*', id)
            const lagu = body.slice(7)
            const lirik = await liriklagu(lagu)
            client.reply(from, lirik, id)
            break
        case '!chord':
            if (args.length === 1) return client.reply(from, 'Kirim perintah *!chord [query]*, contoh *!chord aku bukan boneka*', id)
            const query__ = body.slice(7)
            const chord = await get.get('https://mhankbarbar.herokuapp.com/api/chord?q='+ query__).json()
            if (chord.error) return client.reply(from, chord.error, id)
            client.reply(from, chord.result, id)
            break
        case '!listdaerah':
            const listDaerah = await get('https://mhankbarbar.herokuapp.com/daerah').json()
            client.reply(from, listDaerah, id)
            break
        case '!listblock':
            let hih = `This is list of blocked number\nTotal : ${blockNumber.length}\n`
            for (let i of blockNumber) {
                hih += `➸ @${i.replace(/@c.us/g,'')}\n`
            }
            client.sendTextWithMentions(from, hih, id)
            break
        case '!jadwalshalat':
        case '!js':
            if (args.length === 1) return client.reply(from, '[❗] Kirim perintah *!jadwalShalat [daerah]*\ncontoh : *!jadwalShalat Tangerang*\nUntuk list daerah kirim perintah *!listDaerah*')
            const daerah = body.slice(4)
            const jadwalShalat = await get.get(`https://mhankbarbar.herokuapp.com/api/jadwalshalat?daerah=${daerah}`).json()
            if (jadwalShalat.error) return client.reply(from, jadwalShalat.error, id)
            const { Imsyak, Subuh, Dhuha, Dzuhur, Ashar, Maghrib, Isya } = await jadwalShalat
            arrbulan = ["Januari","Februari","Maret","April","Mei","Juni","Juli","Agustus","September","Oktober","November","Desember"];
            tgl = new Date().getDate()
            bln = new Date().getMonth()
            thn = new Date().getFullYear()
            const resultJadwal = `Jadwal shalat di ${daerah}, ${tgl}-${arrbulan[bln]}-${thn}\n\nImsyak : ${Imsyak}\nSubuh : ${Subuh}\nDhuha : ${Dhuha}\nDzuhur : ${Dzuhur}\nAshar : ${Ashar}\nMaghrib : ${Maghrib}\nIsya : ${Isya}`
            client.reply(from, resultJadwal, id)
            break
        case '!listchannel':
            client.reply(from, listChannel, id)
            break
        case '!jadwaltv':
        case '!jtv':
            if (args.length === 1) return client.reply(from, 'Kirim perintah *!jadwalTv [channel]*', id)
            const query = body.slice(5).toLowerCase()
            const jadwal = await jadwalTv(query)
            client.reply(from, jadwal, id)
            break
        case '!jadwaltvnow':
        case '!jtvnow':
            const jadwalNow = await get.get('https://api.haipbis.xyz/jadwaltvnow').json()
            client.reply(from, `Jam : ${jadwalNow.jam}\n\nJadwalTV : ${jadwalNow.jadwalTV}`, id)
            break
        case '!loli':
            const loli = await get.get('https://mhankbarbar.herokuapp.com/api/randomloli').json()
            client.sendFileFromUrl(from, loli.result, 'loli.jpeg', 'Nih Loli', id)
            .then(() => client.sendStickerfromUrl(from, 'https://i.ibb.co/K9K9NrQ/IMG-20201007-081721.jpg', { method: 'get' }), id)
                break
        case '!waifu':
            const waifu = await get.get('https://mhankbarbar.herokuapp.com/api/waifu').json()
            client.sendFileFromUrl(from, waifu.image, 'Waifu.jpg', `➸ Name : ${waifu.name}\n➸ Description : ${waifu.desc}\n\n➸ Source : ${waifu.source}`, id)
            break
        case '!husbu':
            const diti = fs.readFileSync('./lib/husbu.json')
            const ditiJsin = JSON.parse(diti)
            const rindIndix = Math.floor(Math.random() * ditiJsin.length)
            const rindKiy = ditiJsin[rindIndix]
            client.sendFileFromUrl(from, rindKiy.image, 'Husbu.jpg', rindKiy.teks, id)
            break
        case '!randomhentai':
            if (isGroupMsg) {
                if (!isNsfw) return client.reply(from, 'Command/Perintah NSFW belum di aktifkan di group ini!', id)
                const hentai = await randomNimek('hentai')
                if (hentai.endsWith('.png')) {
                    var ext = '.png'
                } else {
                    var ext = '.jpg'
                }
                client.sendFileFromUrl(from, hentai, `Hentai${ext}`, 'Hentai!', id)
                break
            } else {
                const hentai = await randomNimek('hentai')
                if (hentai.endsWith('.png')) {
                    var ext = '.png'
                } else {
                    var ext = '.jpg'
                }
                client.sendFileFromUrl(from, hentai, `Hentai${ext}`, 'Hentai!', id)
            }
        case '!randomnsfwneko':
            if (isGroupMsg) {
                if (!isNsfw) return client.reply(from, 'Command/Perintah NSFW belum di aktifkan di group ini!', id)
                const nsfwneko = await randomNimek('nsfw')
                if (nsfwneko.endsWith('.png')) {
                    var ext = '.png'
                } else {
                    var ext = '.jpg'
                }
                client.sendFileFromUrl(from, nsfwneko, `nsfwNeko${ext}`, 'Nsfwneko!', id)
            } else {
                const nsfwneko = await randomNimek('nsfw')
                if (nsfwneko.endsWith('.png')) {
                    var ext = '.png'
                } else {
                    var ext = '.jpg'
                }
                client.sendFileFromUrl(from, nsfwneko, `nsfwNeko${ext}`, 'Nsfwneko!', id)
            }
            break
        case '!randomnekonime':
            const nekonime = await get.get('https://mhankbarbar.herokuapp.com/api/nekonime').json()
            if (nekonime.result.endsWith('.png')) {
                var ext = '.png'
            } else {
                var ext = '.jpg'
            }
            client.sendFileFromUrl(from, nekonime.result, `Nekonime${ext}`, 'Nekonime!', id)
            break
        case '!randomtrapnime':
            const trap = await randomNimek('trap')
            if (trap.endsWith('.png')) {
                var ext = '.png'
            } else {
                var ext = '.jpg'
            }
            client.sendFileFromUrl(from, trap, `trapnime${ext}`, 'Trapnime!', id)
            break
        case '!randomanime':
            const nime = await randomNimek('anime')
            if (nime.endsWith('.png')) {
                var ext = '.png'
            } else {
                var ext = '.jpg'
            }
            client.sendFileFromUrl(from, nime, `Randomanime${ext}`, 'Randomanime!', id)
            break
        case '!inu':
        case '!anjing':
            const list = ["https://cdn.shibe.online/shibes/247d0ac978c9de9d9b66d72dbdc65f2dac64781d.jpg","https://cdn.shibe.online/shibes/1cf322acb7d74308995b04ea5eae7b520e0eae76.jpg","https://cdn.shibe.online/shibes/1ce955c3e49ae437dab68c09cf45297d68773adf.jpg","https://cdn.shibe.online/shibes/ec02bee661a797518d37098ab9ad0c02da0b05c3.jpg","https://cdn.shibe.online/shibes/1e6102253b51fbc116b887e3d3cde7b5c5083542.jpg","https://cdn.shibe.online/shibes/f0c07a7205d95577861eee382b4c8899ac620351.jpg","https://cdn.shibe.online/shibes/3eaf3b7427e2d375f09fc883f94fa8a6d4178a0a.jpg","https://cdn.shibe.online/shibes/c8b9fcfde23aee8d179c4c6f34d34fa41dfaffbf.jpg","https://cdn.shibe.online/shibes/55f298bc16017ed0aeae952031f0972b31c959cb.jpg","https://cdn.shibe.online/shibes/2d5dfe2b0170d5de6c8bc8a24b8ad72449fbf6f6.jpg","https://cdn.shibe.online/shibes/e9437de45e7cddd7d6c13299255e06f0f1d40918.jpg","https://cdn.shibe.online/shibes/6c32141a0d5d089971d99e51fd74207ff10751e7.jpg","https://cdn.shibe.online/shibes/028056c9f23ff40bc749a95cc7da7a4bb734e908.jpg","https://cdn.shibe.online/shibes/4fb0c8b74dbc7653e75ec1da597f0e7ac95fe788.jpg","https://cdn.shibe.online/shibes/125563d2ab4e520aaf27214483e765db9147dcb3.jpg","https://cdn.shibe.online/shibes/ea5258fad62cebe1fedcd8ec95776d6a9447698c.jpg","https://cdn.shibe.online/shibes/5ef2c83c2917e2f944910cb4a9a9b441d135f875.jpg","https://cdn.shibe.online/shibes/6d124364f02944300ae4f927b181733390edf64e.jpg","https://cdn.shibe.online/shibes/92213f0c406787acd4be252edb5e27c7e4f7a430.jpg","https://cdn.shibe.online/shibes/40fda0fd3d329be0d92dd7e436faa80db13c5017.jpg","https://cdn.shibe.online/shibes/e5c085fc427528fee7d4c3935ff4cd79af834a82.jpg","https://cdn.shibe.online/shibes/f83fa32c0da893163321b5cccab024172ddbade1.jpg","https://cdn.shibe.online/shibes/4aa2459b7f411919bf8df1991fa114e47b802957.jpg","https://cdn.shibe.online/shibes/2ef54e174f13e6aa21bb8be3c7aec2fdac6a442f.jpg","https://cdn.shibe.online/shibes/fa97547e670f23440608f333f8ec382a75ba5d94.jpg","https://cdn.shibe.online/shibes/fb1b7150ed8eb4ffa3b0e61ba47546dd6ee7d0dc.jpg","https://cdn.shibe.online/shibes/abf9fb41d914140a75d8bf8e05e4049e0a966c68.jpg","https://cdn.shibe.online/shibes/f63e3abe54c71cc0d0c567ebe8bce198589ae145.jpg","https://cdn.shibe.online/shibes/4c27b7b2395a5d051b00691cc4195ef286abf9e1.jpg","https://cdn.shibe.online/shibes/00df02e302eac0676bb03f41f4adf2b32418bac8.jpg","https://cdn.shibe.online/shibes/4deaac9baec39e8a93889a84257338ebb89eca50.jpg","https://cdn.shibe.online/shibes/199f8513d34901b0b20a33758e6ee2d768634ebb.jpg","https://cdn.shibe.online/shibes/f3efbf7a77e5797a72997869e8e2eaa9efcdceb5.jpg","https://cdn.shibe.online/shibes/39a20ccc9cdc17ea27f08643b019734453016e68.jpg","https://cdn.shibe.online/shibes/e67dea458b62cf3daa4b1e2b53a25405760af478.jpg","https://cdn.shibe.online/shibes/0a892f6554c18c8bcdab4ef7adec1387c76c6812.jpg","https://cdn.shibe.online/shibes/1b479987674c9b503f32e96e3a6aeca350a07ade.jpg","https://cdn.shibe.online/shibes/0c80fc00d82e09d593669d7cce9e273024ba7db9.jpg","https://cdn.shibe.online/shibes/bbc066183e87457b3143f71121fc9eebc40bf054.jpg","https://cdn.shibe.online/shibes/0932bf77f115057c7308ef70c3de1de7f8e7c646.jpg","https://cdn.shibe.online/shibes/9c87e6bb0f3dc938ce4c453eee176f24636440e0.jpg","https://cdn.shibe.online/shibes/0af1bcb0b13edf5e9b773e34e54dfceec8fa5849.jpg","https://cdn.shibe.online/shibes/32cf3f6eac4673d2e00f7360753c3f48ed53c650.jpg","https://cdn.shibe.online/shibes/af94d8eeb0f06a0fa06f090f404e3bbe86967949.jpg","https://cdn.shibe.online/shibes/4b55e826553b173c04c6f17aca8b0d2042d309fb.jpg","https://cdn.shibe.online/shibes/a0e53593393b6c724956f9abe0abb112f7506b7b.jpg","https://cdn.shibe.online/shibes/7eba25846f69b01ec04de1cae9fed4b45c203e87.jpg","https://cdn.shibe.online/shibes/fec6620d74bcb17b210e2cedca72547a332030d0.jpg","https://cdn.shibe.online/shibes/26cf6be03456a2609963d8fcf52cc3746fcb222c.jpg","https://cdn.shibe.online/shibes/c41b5da03ad74b08b7919afc6caf2dd345b3e591.jpg","https://cdn.shibe.online/shibes/7a9997f817ccdabac11d1f51fac563242658d654.jpg","https://cdn.shibe.online/shibes/7221241bad7da783c3c4d84cfedbeb21b9e4deea.jpg","https://cdn.shibe.online/shibes/283829584e6425421059c57d001c91b9dc86f33b.jpg","https://cdn.shibe.online/shibes/5145c9d3c3603c9e626585cce8cffdfcac081b31.jpg","https://cdn.shibe.online/shibes/b359c891e39994af83cf45738b28e499cb8ffe74.jpg","https://cdn.shibe.online/shibes/0b77f74a5d9afaa4b5094b28a6f3ee60efcb3874.jpg","https://cdn.shibe.online/shibes/adccfdf7d4d3332186c62ed8eb254a49b889c6f9.jpg","https://cdn.shibe.online/shibes/3aac69180f777512d5dabd33b09f531b7a845331.jpg","https://cdn.shibe.online/shibes/1d25e4f592db83039585fa480676687861498db8.jpg","https://cdn.shibe.online/shibes/d8349a2436420cf5a89a0010e91bf8dfbdd9d1cc.jpg","https://cdn.shibe.online/shibes/eb465ef1906dccd215e7a243b146c19e1af66c67.jpg","https://cdn.shibe.online/shibes/3d14e3c32863195869e7a8ba22229f457780008b.jpg","https://cdn.shibe.online/shibes/79cedc1a08302056f9819f39dcdf8eb4209551a3.jpg","https://cdn.shibe.online/shibes/4440aa827f88c04baa9c946f72fc688a34173581.jpg","https://cdn.shibe.online/shibes/94ea4a2d4b9cb852e9c1ff599f6a4acfa41a0c55.jpg","https://cdn.shibe.online/shibes/f4478196e441aef0ada61bbebe96ac9a573b2e5d.jpg","https://cdn.shibe.online/shibes/96d4db7c073526a35c626fc7518800586fd4ce67.jpg","https://cdn.shibe.online/shibes/196f3ed10ee98557328c7b5db98ac4a539224927.jpg","https://cdn.shibe.online/shibes/d12b07349029ca015d555849bcbd564d8b69fdbf.jpg","https://cdn.shibe.online/shibes/80fba84353000476400a9849da045611a590c79f.jpg","https://cdn.shibe.online/shibes/94cb90933e179375608c5c58b3d8658ef136ad3c.jpg","https://cdn.shibe.online/shibes/8447e67b5d622ef0593485316b0c87940a0ef435.jpg","https://cdn.shibe.online/shibes/c39a1d83ad44d2427fc8090298c1062d1d849f7e.jpg","https://cdn.shibe.online/shibes/6f38b9b5b8dbf187f6e3313d6e7583ec3b942472.jpg","https://cdn.shibe.online/shibes/81a2cbb9a91c6b1d55dcc702cd3f9cfd9a111cae.jpg","https://cdn.shibe.online/shibes/f1f6ed56c814bd939645138b8e195ff392dfd799.jpg","https://cdn.shibe.online/shibes/204a4c43cfad1cdc1b76cccb4b9a6dcb4a5246d8.jpg","https://cdn.shibe.online/shibes/9f34919b6154a88afc7d001c9d5f79b2e465806f.jpg","https://cdn.shibe.online/shibes/6f556a64a4885186331747c432c4ef4820620d14.jpg","https://cdn.shibe.online/shibes/bbd18ae7aaf976f745bc3dff46b49641313c26a9.jpg","https://cdn.shibe.online/shibes/6a2b286a28183267fca2200d7c677eba73b1217d.jpg","https://cdn.shibe.online/shibes/06767701966ed64fa7eff2d8d9e018e9f10487ee.jpg","https://cdn.shibe.online/shibes/7aafa4880b15b8f75d916b31485458b4a8d96815.jpg","https://cdn.shibe.online/shibes/b501169755bcf5c1eca874ab116a2802b6e51a2e.jpg","https://cdn.shibe.online/shibes/a8989bad101f35cf94213f17968c33c3031c16fc.jpg","https://cdn.shibe.online/shibes/f5d78feb3baa0835056f15ff9ced8e3c32bb07e8.jpg","https://cdn.shibe.online/shibes/75db0c76e86fbcf81d3946104c619a7950e62783.jpg","https://cdn.shibe.online/shibes/8ac387d1b252595bbd0723a1995f17405386b794.jpg","https://cdn.shibe.online/shibes/4379491ef4662faa178f791cc592b52653fb24b3.jpg","https://cdn.shibe.online/shibes/4caeee5f80add8c3db9990663a356e4eec12fc0a.jpg","https://cdn.shibe.online/shibes/99ef30ea8bb6064129da36e5673649e957cc76c0.jpg","https://cdn.shibe.online/shibes/aeac6a5b0a07a00fba0ba953af27734d2361fc10.jpg","https://cdn.shibe.online/shibes/9a217cfa377cc50dd8465d251731be05559b2142.jpg","https://cdn.shibe.online/shibes/65f6047d8e1d247af353532db018b08a928fd62a.jpg","https://cdn.shibe.online/shibes/fcead395cbf330b02978f9463ac125074ac87ab4.jpg","https://cdn.shibe.online/shibes/79451dc808a3a73f99c339f485c2bde833380af0.jpg","https://cdn.shibe.online/shibes/bedf90869797983017f764165a5d97a630b7054b.jpg","https://cdn.shibe.online/shibes/dd20e5801badd797513729a3645c502ae4629247.jpg","https://cdn.shibe.online/shibes/88361ee50b544cb1623cb259bcf07b9850183e65.jpg","https://cdn.shibe.online/shibes/0ebcfd98e8aa61c048968cb37f66a2b5d9d54d4b.jpg"]
            let kya = list[Math.floor(Math.random() * list.length)]
            client.sendFileFromUrl(from, kya, 'Dog.jpeg', 'Anjing:v', message.id)
            break
        case '!neko':
        case '!kucing':
            q2 = Math.floor(Math.random() * 900) + 300;
            q3 = Math.floor(Math.random() * 900) + 300;
            client.sendFileFromUrl(from, 'http://placekitten.com/'+q3+'/'+q2, 'neko.png','Kucing', message.id)
            break
        case '!pokemon':
            q7 = Math.floor(Math.random() * 890) + 1;
            client.sendFileFromUrl(from, 'https://assets.pokemon.com/assets/cms2/img/pokedex/full/'+q7+'.png','Pokemon.png',)
            break
        case '!wallpaper':
            switch(args[1]) {
                case 'pubg':
                    const papji = ['https://wallpaperaccess.com/download/pubg-pc-1186818', 'https://wallpaperaccess.com/download/pubg-pc-1186998'] // ini cuma contoh, link gambar lu cari ae di gugel banyak
                    let pubeg = papji[Math.floor(Math.random() * papji.length)]
                    client.sendFileFromUrl(from, pubeg, 'pubeg.jpg', '', id)
                case 'nime':
                    const walnime = ['https://cdn.nekos.life/wallpaper/QwGLg4oFkfY.png','https://cdn.nekos.life/wallpaper/bUzSjcYxZxQ.jpg','https://cdn.nekos.life/wallpaper/j49zxzaUcjQ.jpg','https://cdn.nekos.life/wallpaper/YLTH5KuvGX8.png','https://cdn.nekos.life/wallpaper/Xi6Edg133m8.jpg','https://cdn.nekos.life/wallpaper/qvahUaFIgUY.png','https://cdn.nekos.life/wallpaper/leC8q3u8BSk.jpg','https://cdn.nekos.life/wallpaper/tSUw8s04Zy0.jpg','https://cdn.nekos.life/wallpaper/sqsj3sS6EJE.png','https://cdn.nekos.life/wallpaper/HmjdX_s4PU4.png','https://cdn.nekos.life/wallpaper/Oe2lKgLqEXY.jpg','https://cdn.nekos.life/wallpaper/GTwbUYI-xTc.jpg','https://cdn.nekos.life/wallpaper/nn_nA8wTeP0.png','https://cdn.nekos.life/wallpaper/Q63o6v-UUa8.png','https://cdn.nekos.life/wallpaper/ZXLFm05K16Q.jpg','https://cdn.nekos.life/wallpaper/cwl_1tuUPuQ.png','https://cdn.nekos.life/wallpaper/wWhtfdbfAgM.jpg','https://cdn.nekos.life/wallpaper/3pj0Xy84cPg.jpg','https://cdn.nekos.life/wallpaper/sBoo8_j3fkI.jpg','https://cdn.nekos.life/wallpaper/gCUl_TVizsY.png','https://cdn.nekos.life/wallpaper/LmTi1k9REW8.jpg','https://cdn.nekos.life/wallpaper/sbq_4WW2PUM.jpg','https://cdn.nekos.life/wallpaper/QOSUXEbzDQA.png','https://cdn.nekos.life/wallpaper/khaqGIHsiqk.jpg','https://cdn.nekos.life/wallpaper/iFtEXugqQgA.png','https://cdn.nekos.life/wallpaper/deFKIDdRe1I.jpg','https://cdn.nekos.life/wallpaper/OHZVtvDm0gk.jpg','https://cdn.nekos.life/wallpaper/YZYa00Hp2mk.jpg','https://cdn.nekos.life/wallpaper/R8nPIKQKo9g.png','https://cdn.nekos.life/wallpaper/_brn3qpRBEE.jpg','https://cdn.nekos.life/wallpaper/ADTEQdaHhFI.png','https://cdn.nekos.life/wallpaper/MGvWl6om-Fw.jpg','https://cdn.nekos.life/wallpaper/YGmpjZW3AoQ.jpg','https://cdn.nekos.life/wallpaper/hNCgoY-mQPI.jpg','https://cdn.nekos.life/wallpaper/3db40hylKs8.png','https://cdn.nekos.life/wallpaper/iQ2FSo5nCF8.jpg','https://cdn.nekos.life/wallpaper/meaSEfeq9QM.png','https://cdn.nekos.life/wallpaper/CmEmn79xnZU.jpg','https://cdn.nekos.life/wallpaper/MAL18nB-yBI.jpg','https://cdn.nekos.life/wallpaper/FUuBi2xODuI.jpg','https://cdn.nekos.life/wallpaper/ez-vNNuk6Ck.jpg','https://cdn.nekos.life/wallpaper/K4-z0Bc0Vpc.jpg','https://cdn.nekos.life/wallpaper/Y4JMbswrNg8.jpg','https://cdn.nekos.life/wallpaper/ffbPXIxt4-0.png','https://cdn.nekos.life/wallpaper/x63h_W8KFL8.jpg','https://cdn.nekos.life/wallpaper/lktzjDRhWyg.jpg','https://cdn.nekos.life/wallpaper/j7oQtvRZBOI.jpg','https://cdn.nekos.life/wallpaper/MQQEAD7TUpQ.png','https://cdn.nekos.life/wallpaper/lEG1-Eeva6Y.png','https://cdn.nekos.life/wallpaper/Loh5wf0O5Aw.png','https://cdn.nekos.life/wallpaper/yO6ioREenLA.png','https://cdn.nekos.life/wallpaper/4vKWTVgMNDc.jpg','https://cdn.nekos.life/wallpaper/Yk22OErU8eg.png','https://cdn.nekos.life/wallpaper/Y5uf1hsnufE.png','https://cdn.nekos.life/wallpaper/xAmBpMUd2Zw.jpg','https://cdn.nekos.life/wallpaper/f_RWFoWciRE.jpg','https://cdn.nekos.life/wallpaper/Y9qjP2Y__PA.jpg','https://cdn.nekos.life/wallpaper/eqEzgohpPwc.jpg','https://cdn.nekos.life/wallpaper/s1MBos_ZGWo.jpg','https://cdn.nekos.life/wallpaper/PtW0or_Pa9c.png','https://cdn.nekos.life/wallpaper/32EAswpy3M8.png','https://cdn.nekos.life/wallpaper/Z6eJZf5xhcE.png','https://cdn.nekos.life/wallpaper/xdiSF731IFY.jpg','https://cdn.nekos.life/wallpaper/Y9r9trNYadY.png','https://cdn.nekos.life/wallpaper/8bH8CXn-sOg.jpg','https://cdn.nekos.life/wallpaper/a02DmIFzRBE.png','https://cdn.nekos.life/wallpaper/MnrbXcPa7Oo.png','https://cdn.nekos.life/wallpaper/s1Tc9xnugDk.jpg','https://cdn.nekos.life/wallpaper/zRqEx2gnfmg.jpg','https://cdn.nekos.life/wallpaper/PtW0or_Pa9c.png','https://cdn.nekos.life/wallpaper/0ECCRW9soHM.jpg','https://cdn.nekos.life/wallpaper/kAw8QHl_wbM.jpg','https://cdn.nekos.life/wallpaper/ZXcaFmpOlLk.jpg','https://cdn.nekos.life/wallpaper/WVEdi9Ng8UE.png','https://cdn.nekos.life/wallpaper/IRu29rNgcYU.png','https://cdn.nekos.life/wallpaper/LgIJ_1AL3rM.jpg','https://cdn.nekos.life/wallpaper/DVD5_fLJEZA.jpg','https://cdn.nekos.life/wallpaper/siqOQ7k8qqk.jpg','https://cdn.nekos.life/wallpaper/CXNX_15eGEQ.png','https://cdn.nekos.life/wallpaper/s62tGjOTHnk.jpg','https://cdn.nekos.life/wallpaper/tmQ5ce6EfJE.png','https://cdn.nekos.life/wallpaper/Zju7qlBMcQ4.jpg','https://cdn.nekos.life/wallpaper/CPOc_bMAh2Q.png','https://cdn.nekos.life/wallpaper/Ew57S1KtqsY.jpg','https://cdn.nekos.life/wallpaper/hVpFbYJmZZc.jpg','https://cdn.nekos.life/wallpaper/sb9_J28pftY.jpg','https://cdn.nekos.life/wallpaper/JDoIi_IOB04.jpg','https://cdn.nekos.life/wallpaper/rG76AaUZXzk.jpg','https://cdn.nekos.life/wallpaper/9ru2luBo360.png','https://cdn.nekos.life/wallpaper/ghCgiWFxGwY.png','https://cdn.nekos.life/wallpaper/OSR-i-Rh7ZY.png','https://cdn.nekos.life/wallpaper/65VgtPyweCc.jpg','https://cdn.nekos.life/wallpaper/3vn-0FkNSbM.jpg','https://cdn.nekos.life/wallpaper/u02Y0-AJPL0.jpg','https://cdn.nekos.life/wallpaper/_-Z-0fGflRc.jpg','https://cdn.nekos.life/wallpaper/3VjNKqEPp58.jpg','https://cdn.nekos.life/wallpaper/NoG4lKnk6Sc.jpg','https://cdn.nekos.life/wallpaper/xiTxgRMA_IA.jpg','https://cdn.nekos.life/wallpaper/yq1ZswdOGpg.png','https://cdn.nekos.life/wallpaper/4SUxw4M3UMA.png','https://cdn.nekos.life/wallpaper/cUPnQOHNLg0.jpg','https://cdn.nekos.life/wallpaper/zczjuLWRisA.jpg','https://cdn.nekos.life/wallpaper/TcxvU_diaC0.png','https://cdn.nekos.life/wallpaper/7qqWhEF_uoY.jpg','https://cdn.nekos.life/wallpaper/J4t_7DvoUZw.jpg','https://cdn.nekos.life/wallpaper/xQ1Pg5D6J4U.jpg','https://cdn.nekos.life/wallpaper/aIMK5Ir4xho.jpg','https://cdn.nekos.life/wallpaper/6gneEXrNAWU.jpg','https://cdn.nekos.life/wallpaper/PSvNdoISWF8.jpg','https://cdn.nekos.life/wallpaper/SjgF2-iOmV8.jpg','https://cdn.nekos.life/wallpaper/vU54ikOVY98.jpg','https://cdn.nekos.life/wallpaper/QjnfRwkRU-Q.jpg','https://cdn.nekos.life/wallpaper/uSKqzz6ZdXc.png','https://cdn.nekos.life/wallpaper/AMrcxZOnVBE.jpg','https://cdn.nekos.life/wallpaper/N1l8SCMxamE.jpg','https://cdn.nekos.life/wallpaper/n2cBaTo-J50.png','https://cdn.nekos.life/wallpaper/ZXcaFmpOlLk.jpg','https://cdn.nekos.life/wallpaper/7bwxy3elI7o.png','https://cdn.nekos.life/wallpaper/7VW4HwF6LcM.jpg','https://cdn.nekos.life/wallpaper/YtrPAWul1Ug.png','https://cdn.nekos.life/wallpaper/1p4_Mmq95Ro.jpg','https://cdn.nekos.life/wallpaper/EY5qz5iebJw.png','https://cdn.nekos.life/wallpaper/aVDS6iEAIfw.jpg','https://cdn.nekos.life/wallpaper/veg_xpHQfjE.jpg','https://cdn.nekos.life/wallpaper/meaSEfeq9QM.png','https://cdn.nekos.life/wallpaper/Xa_GtsKsy-s.png','https://cdn.nekos.life/wallpaper/6Bx8R6D75eM.png','https://cdn.nekos.life/wallpaper/zXOGXH_b8VY.png','https://cdn.nekos.life/wallpaper/VQcviMxoQ00.png','https://cdn.nekos.life/wallpaper/CJnRl-PKWe8.png','https://cdn.nekos.life/wallpaper/zEWYfFL_Ero.png','https://cdn.nekos.life/wallpaper/_C9Uc5MPaz4.png','https://cdn.nekos.life/wallpaper/zskxNqNXyG0.jpg','https://cdn.nekos.life/wallpaper/g7w14PjzzcQ.jpg','https://cdn.nekos.life/wallpaper/KavYXR_GRB4.jpg','https://cdn.nekos.life/wallpaper/Z_r9WItzJBc.jpg','https://cdn.nekos.life/wallpaper/Qps-0JD6834.jpg','https://cdn.nekos.life/wallpaper/Ri3CiJIJ6M8.png','https://cdn.nekos.life/wallpaper/ArGYIpJwehY.jpg','https://cdn.nekos.life/wallpaper/uqYKeYM5h8w.jpg','https://cdn.nekos.life/wallpaper/h9cahfuKsRg.jpg','https://cdn.nekos.life/wallpaper/iNPWKO8d2a4.jpg','https://cdn.nekos.life/wallpaper/j2KoFVhsNig.jpg','https://cdn.nekos.life/wallpaper/z5Nc-aS6QJ4.jpg','https://cdn.nekos.life/wallpaper/VUFoK8l1qs0.png','https://cdn.nekos.life/wallpaper/rQ8eYh5mXN8.png','https://cdn.nekos.life/wallpaper/D3NxNISDavQ.png','https://cdn.nekos.life/wallpaper/Z_CiozIenrU.jpg','https://cdn.nekos.life/wallpaper/np8rpfZflWE.jpg','https://cdn.nekos.life/wallpaper/ED-fgS09gik.jpg','https://cdn.nekos.life/wallpaper/AB0Cwfs1X2w.jpg','https://cdn.nekos.life/wallpaper/DZBcYfHouiI.jpg','https://cdn.nekos.life/wallpaper/lC7pB-GRAcQ.png','https://cdn.nekos.life/wallpaper/zrI-sBSt2zE.png','https://cdn.nekos.life/wallpaper/_RJhylwaCLk.jpg','https://cdn.nekos.life/wallpaper/6km5m_GGIuw.png','https://cdn.nekos.life/wallpaper/3db40hylKs8.png','https://cdn.nekos.life/wallpaper/oggceF06ONQ.jpg','https://cdn.nekos.life/wallpaper/ELdH2W5pQGo.jpg','https://cdn.nekos.life/wallpaper/Zun_n5pTMRE.png','https://cdn.nekos.life/wallpaper/VqhFKG5U15c.png','https://cdn.nekos.life/wallpaper/NsMoiW8JZ60.jpg','https://cdn.nekos.life/wallpaper/XE4iXbw__Us.png','https://cdn.nekos.life/wallpaper/a9yXhS2zbhU.jpg','https://cdn.nekos.life/wallpaper/jjnd31_3Ic8.jpg','https://cdn.nekos.life/wallpaper/Nxanxa-xO3s.png','https://cdn.nekos.life/wallpaper/dBHlPcbuDc4.jpg','https://cdn.nekos.life/wallpaper/6wUZIavGVQU.jpg','https://cdn.nekos.life/wallpaper/_-Z-0fGflRc.jpg','https://cdn.nekos.life/wallpaper/H9OUpIrF4gU.jpg','https://cdn.nekos.life/wallpaper/xlRdH3fBMz4.jpg','https://cdn.nekos.life/wallpaper/7IzUIeaae9o.jpg','https://cdn.nekos.life/wallpaper/FZCVL6PyWq0.jpg','https://cdn.nekos.life/wallpaper/5dG-HH6d0yw.png','https://cdn.nekos.life/wallpaper/ddxyA37HiwE.png','https://cdn.nekos.life/wallpaper/I0oj_jdCD4k.jpg','https://cdn.nekos.life/wallpaper/ABchTV97_Ts.png','https://cdn.nekos.life/wallpaper/58C37kkq39Y.png','https://cdn.nekos.life/wallpaper/HMS5mK7WSGA.jpg','https://cdn.nekos.life/wallpaper/1O3Yul9ojS8.jpg','https://cdn.nekos.life/wallpaper/hdZI1XsYWYY.jpg','https://cdn.nekos.life/wallpaper/h8pAJJnBXZo.png','https://cdn.nekos.life/wallpaper/apO9K9JIUp8.jpg','https://cdn.nekos.life/wallpaper/p8f8IY_2mwg.jpg','https://cdn.nekos.life/wallpaper/HY1WIB2r_cE.jpg','https://cdn.nekos.life/wallpaper/u02Y0-AJPL0.jpg','https://cdn.nekos.life/wallpaper/jzN74LcnwE8.png','https://cdn.nekos.life/wallpaper/IeAXo5nJhjw.jpg','https://cdn.nekos.life/wallpaper/7lgPyU5fuLY.jpg','https://cdn.nekos.life/wallpaper/f8SkRWzXVxk.png','https://cdn.nekos.life/wallpaper/ZmDTpGGeMR8.jpg','https://cdn.nekos.life/wallpaper/AMrcxZOnVBE.jpg','https://cdn.nekos.life/wallpaper/ZhP-f8Icmjs.jpg','https://cdn.nekos.life/wallpaper/7FyUHX3fE2o.jpg','https://cdn.nekos.life/wallpaper/CZoSLK-5ng8.png','https://cdn.nekos.life/wallpaper/pSNDyxP8l3c.png','https://cdn.nekos.life/wallpaper/AhYGHF6Fpck.jpg','https://cdn.nekos.life/wallpaper/ic6xRRptRes.jpg','https://cdn.nekos.life/wallpaper/89MQq6KaggI.png','https://cdn.nekos.life/wallpaper/y1DlFeHHTEE.png']
                    let walnimek = walnime[Math.floor(Math.random() * walnime.length)]
                    client.sendFileFromUrl(from, walnimek, 'Nimek.jpg', '', id)
            }
            break
             case 'news':
             case '!berita':
          const respons = await axios.get('http://newsapi.org/v2/top-headlines?country=id&apiKey=b2d3b1c264c147ae88dba39998c23279')
          const { totalResults, articles } = respons.data
          res = totalResults
          if (args[1] >= totalResults) {
            res = totalResults
          } else {
            res = args[1]
          }
          i = 0
          pesan = '_*Berita Terbaru Hari Ini*_\n\n'
          for (const isi of articles) {
            i++
            pesan = pesan + i + '. ' + '_' + isi.title + '_' + '\n' + isi.publishedAt + '\n' + isi.description + '\n' + isi.url
            if (i<res) {
              pesen = pesan + '\n\n'
            } else if(i > res){
              break
            }
          }
          await client.sendText(from, pesan)
          break
        case '!ara' :
          client.sendStickerfromUrl(from, 'https://ih1.redbubble.net/image.930182194.9969/st,small,507x507-pad,600x600,f8f8f8.jpg', { method: 'get' })
          break
           case '!wallanime' :
            const walnime = ['https://wallpaperaccess.com/full/395986.jpg','https://wallpaperaccess.com/full/21628.jpg','https://wallpaperaccess.com/full/21622.jpg','https://wallpaperaccess.com/full/21612.jpg','https://wallpaperaccess.com/full/21611.png','https://wallpaperaccess.com/full/21597.jpg','https://cdn.nekos.life/wallpaper/QwGLg4oFkfY.png','https://wallpaperaccess.com/full/21591.jpg','https://cdn.nekos.life/wallpaper/bUzSjcYxZxQ.jpg','https://cdn.nekos.life/wallpaper/j49zxzaUcjQ.jpg','https://cdn.nekos.life/wallpaper/YLTH5KuvGX8.png','https://cdn.nekos.life/wallpaper/Xi6Edg133m8.jpg','https://cdn.nekos.life/wallpaper/qvahUaFIgUY.png','https://cdn.nekos.life/wallpaper/leC8q3u8BSk.jpg','https://cdn.nekos.life/wallpaper/tSUw8s04Zy0.jpg','https://cdn.nekos.life/wallpaper/sqsj3sS6EJE.png','https://cdn.nekos.life/wallpaper/HmjdX_s4PU4.png','https://cdn.nekos.life/wallpaper/Oe2lKgLqEXY.jpg','https://cdn.nekos.life/wallpaper/GTwbUYI-xTc.jpg','https://cdn.nekos.life/wallpaper/nn_nA8wTeP0.png','https://cdn.nekos.life/wallpaper/Q63o6v-UUa8.png','https://cdn.nekos.life/wallpaper/ZXLFm05K16Q.jpg','https://cdn.nekos.life/wallpaper/cwl_1tuUPuQ.png','https://cdn.nekos.life/wallpaper/wWhtfdbfAgM.jpg','https://cdn.nekos.life/wallpaper/3pj0Xy84cPg.jpg','https://cdn.nekos.life/wallpaper/sBoo8_j3fkI.jpg','https://cdn.nekos.life/wallpaper/gCUl_TVizsY.png','https://cdn.nekos.life/wallpaper/LmTi1k9REW8.jpg','https://cdn.nekos.life/wallpaper/sbq_4WW2PUM.jpg','https://cdn.nekos.life/wallpaper/QOSUXEbzDQA.png','https://cdn.nekos.life/wallpaper/khaqGIHsiqk.jpg','https://cdn.nekos.life/wallpaper/iFtEXugqQgA.png','https://cdn.nekos.life/wallpaper/deFKIDdRe1I.jpg','https://cdn.nekos.life/wallpaper/OHZVtvDm0gk.jpg','https://cdn.nekos.life/wallpaper/YZYa00Hp2mk.jpg','https://cdn.nekos.life/wallpaper/R8nPIKQKo9g.png','https://cdn.nekos.life/wallpaper/_brn3qpRBEE.jpg','https://cdn.nekos.life/wallpaper/ADTEQdaHhFI.png','https://cdn.nekos.life/wallpaper/MGvWl6om-Fw.jpg','https://cdn.nekos.life/wallpaper/YGmpjZW3AoQ.jpg','https://cdn.nekos.life/wallpaper/hNCgoY-mQPI.jpg','https://cdn.nekos.life/wallpaper/3db40hylKs8.png','https://cdn.nekos.life/wallpaper/iQ2FSo5nCF8.jpg','https://cdn.nekos.life/wallpaper/meaSEfeq9QM.png','https://cdn.nekos.life/wallpaper/CmEmn79xnZU.jpg','https://cdn.nekos.life/wallpaper/MAL18nB-yBI.jpg','https://cdn.nekos.life/wallpaper/FUuBi2xODuI.jpg','https://cdn.nekos.life/wallpaper/ez-vNNuk6Ck.jpg','https://cdn.nekos.life/wallpaper/K4-z0Bc0Vpc.jpg','https://cdn.nekos.life/wallpaper/Y4JMbswrNg8.jpg','https://cdn.nekos.life/wallpaper/ffbPXIxt4-0.png','https://cdn.nekos.life/wallpaper/x63h_W8KFL8.jpg','https://cdn.nekos.life/wallpaper/lktzjDRhWyg.jpg','https://cdn.nekos.life/wallpaper/j7oQtvRZBOI.jpg','https://cdn.nekos.life/wallpaper/MQQEAD7TUpQ.png','https://cdn.nekos.life/wallpaper/lEG1-Eeva6Y.png','https://cdn.nekos.life/wallpaper/Loh5wf0O5Aw.png','https://cdn.nekos.life/wallpaper/yO6ioREenLA.png','https://cdn.nekos.life/wallpaper/4vKWTVgMNDc.jpg','https://cdn.nekos.life/wallpaper/Yk22OErU8eg.png','https://cdn.nekos.life/wallpaper/Y5uf1hsnufE.png','https://cdn.nekos.life/wallpaper/xAmBpMUd2Zw.jpg','https://cdn.nekos.life/wallpaper/f_RWFoWciRE.jpg','https://cdn.nekos.life/wallpaper/Y9qjP2Y__PA.jpg','https://cdn.nekos.life/wallpaper/eqEzgohpPwc.jpg','https://cdn.nekos.life/wallpaper/s1MBos_ZGWo.jpg','https://cdn.nekos.life/wallpaper/PtW0or_Pa9c.png','https://cdn.nekos.life/wallpaper/32EAswpy3M8.png','https://cdn.nekos.life/wallpaper/Z6eJZf5xhcE.png','https://cdn.nekos.life/wallpaper/xdiSF731IFY.jpg','https://cdn.nekos.life/wallpaper/Y9r9trNYadY.png','https://cdn.nekos.life/wallpaper/8bH8CXn-sOg.jpg','https://cdn.nekos.life/wallpaper/a02DmIFzRBE.png','https://cdn.nekos.life/wallpaper/MnrbXcPa7Oo.png','https://cdn.nekos.life/wallpaper/s1Tc9xnugDk.jpg','https://cdn.nekos.life/wallpaper/zRqEx2gnfmg.jpg','https://cdn.nekos.life/wallpaper/PtW0or_Pa9c.png','https://cdn.nekos.life/wallpaper/0ECCRW9soHM.jpg','https://cdn.nekos.life/wallpaper/kAw8QHl_wbM.jpg','https://cdn.nekos.life/wallpaper/ZXcaFmpOlLk.jpg','https://cdn.nekos.life/wallpaper/WVEdi9Ng8UE.png','https://cdn.nekos.life/wallpaper/IRu29rNgcYU.png','https://cdn.nekos.life/wallpaper/LgIJ_1AL3rM.jpg','https://cdn.nekos.life/wallpaper/DVD5_fLJEZA.jpg','https://cdn.nekos.life/wallpaper/siqOQ7k8qqk.jpg','https://cdn.nekos.life/wallpaper/CXNX_15eGEQ.png','https://cdn.nekos.life/wallpaper/s62tGjOTHnk.jpg','https://cdn.nekos.life/wallpaper/tmQ5ce6EfJE.png','https://cdn.nekos.life/wallpaper/Zju7qlBMcQ4.jpg','https://cdn.nekos.life/wallpaper/CPOc_bMAh2Q.png','https://cdn.nekos.life/wallpaper/Ew57S1KtqsY.jpg','https://cdn.nekos.life/wallpaper/hVpFbYJmZZc.jpg','https://cdn.nekos.life/wallpaper/sb9_J28pftY.jpg','https://cdn.nekos.life/wallpaper/JDoIi_IOB04.jpg','https://cdn.nekos.life/wallpaper/rG76AaUZXzk.jpg','https://cdn.nekos.life/wallpaper/9ru2luBo360.png','https://cdn.nekos.life/wallpaper/ghCgiWFxGwY.png','https://cdn.nekos.life/wallpaper/OSR-i-Rh7ZY.png','https://cdn.nekos.life/wallpaper/65VgtPyweCc.jpg','https://cdn.nekos.life/wallpaper/3vn-0FkNSbM.jpg','https://cdn.nekos.life/wallpaper/u02Y0-AJPL0.jpg','https://cdn.nekos.life/wallpaper/_-Z-0fGflRc.jpg','https://cdn.nekos.life/wallpaper/3VjNKqEPp58.jpg','https://cdn.nekos.life/wallpaper/NoG4lKnk6Sc.jpg','https://cdn.nekos.life/wallpaper/xiTxgRMA_IA.jpg','https://cdn.nekos.life/wallpaper/yq1ZswdOGpg.png','https://cdn.nekos.life/wallpaper/4SUxw4M3UMA.png','https://cdn.nekos.life/wallpaper/cUPnQOHNLg0.jpg','https://cdn.nekos.life/wallpaper/zczjuLWRisA.jpg','https://cdn.nekos.life/wallpaper/TcxvU_diaC0.png','https://cdn.nekos.life/wallpaper/7qqWhEF_uoY.jpg','https://cdn.nekos.life/wallpaper/J4t_7DvoUZw.jpg','https://cdn.nekos.life/wallpaper/xQ1Pg5D6J4U.jpg','https://cdn.nekos.life/wallpaper/aIMK5Ir4xho.jpg','https://cdn.nekos.life/wallpaper/6gneEXrNAWU.jpg','https://cdn.nekos.life/wallpaper/PSvNdoISWF8.jpg','https://cdn.nekos.life/wallpaper/SjgF2-iOmV8.jpg','https://cdn.nekos.life/wallpaper/vU54ikOVY98.jpg','https://cdn.nekos.life/wallpaper/QjnfRwkRU-Q.jpg','https://cdn.nekos.life/wallpaper/uSKqzz6ZdXc.png','https://cdn.nekos.life/wallpaper/AMrcxZOnVBE.jpg','https://cdn.nekos.life/wallpaper/N1l8SCMxamE.jpg','https://cdn.nekos.life/wallpaper/n2cBaTo-J50.png','https://cdn.nekos.life/wallpaper/ZXcaFmpOlLk.jpg','https://cdn.nekos.life/wallpaper/7bwxy3elI7o.png','https://cdn.nekos.life/wallpaper/7VW4HwF6LcM.jpg','https://cdn.nekos.life/wallpaper/YtrPAWul1Ug.png','https://cdn.nekos.life/wallpaper/1p4_Mmq95Ro.jpg','https://cdn.nekos.life/wallpaper/EY5qz5iebJw.png','https://cdn.nekos.life/wallpaper/aVDS6iEAIfw.jpg','https://cdn.nekos.life/wallpaper/veg_xpHQfjE.jpg','https://cdn.nekos.life/wallpaper/meaSEfeq9QM.png','https://cdn.nekos.life/wallpaper/Xa_GtsKsy-s.png','https://cdn.nekos.life/wallpaper/6Bx8R6D75eM.png','https://cdn.nekos.life/wallpaper/zXOGXH_b8VY.png','https://cdn.nekos.life/wallpaper/VQcviMxoQ00.png','https://cdn.nekos.life/wallpaper/CJnRl-PKWe8.png','https://cdn.nekos.life/wallpaper/zEWYfFL_Ero.png','https://cdn.nekos.life/wallpaper/_C9Uc5MPaz4.png','https://cdn.nekos.life/wallpaper/zskxNqNXyG0.jpg','https://cdn.nekos.life/wallpaper/g7w14PjzzcQ.jpg','https://cdn.nekos.life/wallpaper/KavYXR_GRB4.jpg','https://cdn.nekos.life/wallpaper/Z_r9WItzJBc.jpg','https://cdn.nekos.life/wallpaper/Qps-0JD6834.jpg','https://cdn.nekos.life/wallpaper/Ri3CiJIJ6M8.png','https://cdn.nekos.life/wallpaper/ArGYIpJwehY.jpg','https://cdn.nekos.life/wallpaper/uqYKeYM5h8w.jpg','https://cdn.nekos.life/wallpaper/h9cahfuKsRg.jpg','https://cdn.nekos.life/wallpaper/iNPWKO8d2a4.jpg','https://cdn.nekos.life/wallpaper/j2KoFVhsNig.jpg','https://cdn.nekos.life/wallpaper/z5Nc-aS6QJ4.jpg','https://cdn.nekos.life/wallpaper/VUFoK8l1qs0.png','https://cdn.nekos.life/wallpaper/rQ8eYh5mXN8.png','https://cdn.nekos.life/wallpaper/D3NxNISDavQ.png','https://cdn.nekos.life/wallpaper/Z_CiozIenrU.jpg','https://cdn.nekos.life/wallpaper/np8rpfZflWE.jpg','https://cdn.nekos.life/wallpaper/ED-fgS09gik.jpg','https://cdn.nekos.life/wallpaper/AB0Cwfs1X2w.jpg','https://cdn.nekos.life/wallpaper/DZBcYfHouiI.jpg','https://cdn.nekos.life/wallpaper/lC7pB-GRAcQ.png','https://cdn.nekos.life/wallpaper/zrI-sBSt2zE.png','https://cdn.nekos.life/wallpaper/_RJhylwaCLk.jpg','https://cdn.nekos.life/wallpaper/6km5m_GGIuw.png','https://cdn.nekos.life/wallpaper/3db40hylKs8.png','https://cdn.nekos.life/wallpaper/oggceF06ONQ.jpg','https://cdn.nekos.life/wallpaper/ELdH2W5pQGo.jpg','https://cdn.nekos.life/wallpaper/Zun_n5pTMRE.png','https://cdn.nekos.life/wallpaper/VqhFKG5U15c.png','https://cdn.nekos.life/wallpaper/NsMoiW8JZ60.jpg','https://cdn.nekos.life/wallpaper/XE4iXbw__Us.png','https://cdn.nekos.life/wallpaper/a9yXhS2zbhU.jpg','https://cdn.nekos.life/wallpaper/jjnd31_3Ic8.jpg','https://cdn.nekos.life/wallpaper/Nxanxa-xO3s.png','https://cdn.nekos.life/wallpaper/dBHlPcbuDc4.jpg','https://cdn.nekos.life/wallpaper/6wUZIavGVQU.jpg','https://cdn.nekos.life/wallpaper/_-Z-0fGflRc.jpg','https://cdn.nekos.life/wallpaper/H9OUpIrF4gU.jpg','https://cdn.nekos.life/wallpaper/xlRdH3fBMz4.jpg','https://cdn.nekos.life/wallpaper/7IzUIeaae9o.jpg','https://cdn.nekos.life/wallpaper/FZCVL6PyWq0.jpg','https://cdn.nekos.life/wallpaper/5dG-HH6d0yw.png','https://cdn.nekos.life/wallpaper/ddxyA37HiwE.png','https://cdn.nekos.life/wallpaper/I0oj_jdCD4k.jpg','https://cdn.nekos.life/wallpaper/ABchTV97_Ts.png','https://cdn.nekos.life/wallpaper/58C37kkq39Y.png','https://cdn.nekos.life/wallpaper/HMS5mK7WSGA.jpg','https://cdn.nekos.life/wallpaper/1O3Yul9ojS8.jpg','https://cdn.nekos.life/wallpaper/hdZI1XsYWYY.jpg','https://cdn.nekos.life/wallpaper/h8pAJJnBXZo.png','https://cdn.nekos.life/wallpaper/apO9K9JIUp8.jpg','https://cdn.nekos.life/wallpaper/p8f8IY_2mwg.jpg','https://cdn.nekos.life/wallpaper/HY1WIB2r_cE.jpg','https://cdn.nekos.life/wallpaper/u02Y0-AJPL0.jpg','https://cdn.nekos.life/wallpaper/jzN74LcnwE8.png','https://cdn.nekos.life/wallpaper/IeAXo5nJhjw.jpg','https://cdn.nekos.life/wallpaper/7lgPyU5fuLY.jpg','https://cdn.nekos.life/wallpaper/f8SkRWzXVxk.png','https://cdn.nekos.life/wallpaper/ZmDTpGGeMR8.jpg','https://cdn.nekos.life/wallpaper/AMrcxZOnVBE.jpg','https://cdn.nekos.life/wallpaper/ZhP-f8Icmjs.jpg','https://cdn.nekos.life/wallpaper/7FyUHX3fE2o.jpg','https://cdn.nekos.life/wallpaper/CZoSLK-5ng8.png','https://cdn.nekos.life/wallpaper/pSNDyxP8l3c.png','https://cdn.nekos.life/wallpaper/AhYGHF6Fpck.jpg','https://cdn.nekos.life/wallpaper/ic6xRRptRes.jpg','https://cdn.nekos.life/wallpaper/89MQq6KaggI.png','https://cdn.nekos.life/wallpaper/y1DlFeHHTEE.png']
            let walnimek = walnime[Math.floor(Math.random() * walnime.length)]
            client.sendFileFromUrl(from, walnimek, 'Nimek.jpg', 'Wallpaper Anime © Bot Nolep', message.id)
            break
              case '!walldekstop':
            client.sendFileFromUrl(from, 'https://source.unsplash.com/1920x1080/?nature','wp.jpeg', 'Wallpaper Dekstop © Bot Nolep', message.id)
            break
        case '!wallhp':
            client.sendFileFromUrl(from, 'https://source.unsplash.com/1080x1920/?nature','wp.jpeg', 'Wallpaper Hp © Bot Nolep', message.id)
            break
              case '!botstat': 
            case 'stat':
            const loadedMsg = await client.getAmountOfLoadedMessages()
            const chatIds = await client.getAllChatIds()
            const groups = await client.getAllGroups()
            client.sendText(from, `Status :\n- *${loadedMsg}* Pesan Masuk\n- *${groups.length}* Jumlah Grup\n- *${chatIds.length - groups.length}* Chat Pribadi\n- *${chatIds.length}* Total Chat`, message.id)
            break
           case '!pptl':
              const pptl = ["https://i.pinimg.com/564x/b2/84/55/b2845599d303a4f8fc4f7d2a576799fa.jpg","https://i.pinimg.com/236x/98/08/1c/98081c4dffde1c89c444db4dc1912d2d.jpg","https://i.pinimg.com/236x/a7/e2/fe/a7e2fee8b0abef9d9ecc8885557a4e91.jpg","https://i.pinimg.com/236x/ee/ae/76/eeae769648dfaa18cac66f1d0be8c160.jpg","https://i.pinimg.com/236x/b2/84/55/b2845599d303a4f8fc4f7d2a576799fa.jpg","https://i.pinimg.com/564x/78/7c/49/787c4924083a9424a900e8f1f4fdf05f.jpg","https://i.pinimg.com/236x/eb/05/dc/eb05dc1c306f69dd43b7cae7cbe03d27.jpg","https://i.pinimg.com/236x/d0/1b/40/d01b40691c68b84489f938b939a13871.jpg","https://i.pinimg.com/236x/31/f3/06/31f3065fa218856d7650e84b000d98ab.jpg","https://i.pinimg.com/236x/4a/e5/06/4ae5061a5c594d3fdf193544697ba081.jpg","https://i.pinimg.com/236x/56/45/dc/5645dc4a4a60ac5b2320ce63c8233d6a.jpg","https://i.pinimg.com/236x/7f/ad/82/7fad82eec0fa64a41728c9868a608e73.jpg","https://i.pinimg.com/236x/ce/f8/aa/cef8aa0c963170540a96406b6e54991c.jpg","https://i.pinimg.com/236x/77/02/34/77023447b040aef001b971e0defc73e3.jpg","https://i.pinimg.com/236x/4a/5c/38/4a5c38d39687f76004a097011ae44c7d.jpg","https://i.pinimg.com/236x/41/72/af/4172af2053e54ec6de5e221e884ab91b.jpg","https://i.pinimg.com/236x/26/63/ef/2663ef4d4ecfc935a6a2b51364f80c2b.jpg","https://i.pinimg.com/236x/2b/cb/48/2bcb487b6d398e8030814c7a6c5a641d.jpg","https://i.pinimg.com/236x/62/da/23/62da234d941080696428e6d4deec6d73.jpg","https://i.pinimg.com/236x/d4/f3/40/d4f340e614cc4f69bf9a31036e3d03c5.jpg","https://i.pinimg.com/236x/d4/97/dd/d497dd29ca202be46111f1d9e62ffa65.jpg","https://i.pinimg.com/564x/52/35/66/523566d43058e26bf23150ac064cfdaa.jpg","https://i.pinimg.com/236x/36/e5/27/36e52782f8d10e4f97ec4dbbc97b7e67.jpg","https://i.pinimg.com/236x/02/a0/33/02a033625cb51e0c878e6df2d8d00643.jpg","https://i.pinimg.com/236x/30/9b/04/309b04d4a498addc6e4dd9d9cdfa57a9.jpg","https://i.pinimg.com/236x/9e/1d/ef/9e1def3b7ce4084b7c64693f15b8bea9.jpg","https://i.pinimg.com/236x/e1/8f/a2/e18fa21af74c28e439f1eb4c60e5858a.jpg","https://i.pinimg.com/236x/22/d9/22/22d9220de8619001fe1b27a2211d477e.jpg","https://i.pinimg.com/236x/af/ac/4d/afac4d11679184f557d9294c2270552d.jpg","https://i.pinimg.com/564x/52/be/c9/52bec924b5bdc0d761cfb1160865b5a1.jpg","https://i.pinimg.com/236x/1a/5a/3c/1a5a3cffd0d936cd4969028668530a15.jpg"]
            let pep = pptl[Math.floor(Math.random() * pptl.length)]
            client.sendFileFromUrl(from, pep, 'pptl.jpg', 'Penyegar Timeline © Bot Nolep', message.id)
            break
        case '!ssweb':
            const _query = body.slice(4)
            if (!_query.match(isUrl)) return client.reply(from, mess.error.Iv, id)
            if (args.length === 1) return client.reply(from, 'Kirim perintah *!ss [web]*\nContoh *!ss https://google.com*', id)
            await ss(_query).then(() => client.sendFile(from, './media/img/screenshot.jpeg', 'ss.jpeg', '', id))
            .catch(() => client.reply(from, `Error tidak dapat mengambil screenshot website ${_query}`, id))
            break
        case '!quote':
        case '!quotes':
         const quotes = await get.get('https://mhankbarbar.herokuapp.com/api/randomquotes').json()
            client.reply(from, `➸ *Quotes* : ${quotes.quotes}\n➸ *Author* : ${quotes.author}`, id)
            break
        case '!quotesnime':
       const skya = await get.get('https://mhankbarbar.herokuapp.com/api/quotesnime/random').json()
            skya_ = skya.data
            client.reply(from, `➸ *Quotes* : ${skya_.quote}\n➸ *Character* : ${skya_.character}\n➸ *Anime* : ${skya_.anime}`, id)
            break
        case '!meme':
     const response = await axios.get('https://meme-api.herokuapp.com/gimme/wholesomeanimemes');
            const { postlink, title, subreddit, url, nsfw, spoiler } = response.data
            client.sendFileFromUrl(from, `${url}`, 'meme.jpg', `${title}`)
            break
        case '!help':
        case '!menu':
        case 'helep':
        case 'help':
            client.sendFileFromUrl(from, 'https://i.ibb.co/ZL2CXyh/20200927-200531.jpg', 'bot.jpg', donate, id)
/*`Halo _*${pushname}*_ Sebelum Menggunakan Bot Silahkan Membaca _*rules*_ Terlebih Dahulu,Dengan Mengetik *!rules*
ketik *!donasi* Jika Ingin Donasi.

List Menu:

_*Menu Utama*_

➥!p [Sticker Maker]
➥!nobg [BETA]
➥!gif VIDEO/GIF 10 Detik!
➥!kucing
➥!anjing
➥!pokemon
➥!tts [kodebahasa] teks 
➥!wallpaper nime/pubg
➥!wallanime
➥!walldekstop
➥!wallhp
➥!listsurah
➥!quran [no surah] [ayat]
➥!quran 
➥!bmkg
➥!covid [region] Use English
➥!covid19 [negara]
➥!jadwalShalat [daerah]
➥!jadwalTv [channel]
➥!cuaca [tempat]
➥!igStalk [@username]
➥!anime [query]
➥!wiki [query]
➥!gombal
➥!waifu
➥!randomnekonime
➥!husbu
➥!mager
➥!loli
➥!ara
➥!infoGempa
➥!berita
➥!wait
➥!creator
➥!ask [pertanyaan]
➥/say [teks]
➥/reverse [teks]
➥/curse [teks]
➥!md5 [teks]
➥!biner [teks]
➥!lenny
➥!waktu
➥!server
➥!hi
➥!meme
➥!quotes
➥!qmaker |teks|author|
➥!quotesnime
➥!listblock
➥!jadwaltvnow
➥!lirik [judul lagu]
➥!lirik2 [judul lagu]
➥!chord [query]
➥!botstat
➥!pptl

_*Menu Admin Grup*_

➥!add 628xxxx
➥!kick <@tagmember>
➥!promote <@tagmember>
➥!demote <@tagadmin>
➥!listadmin
➥!ownergrup
➥!tagall
➥!delete [balas pesan bot]
➥!welcome enable/disable
➥!kickall
➥!leave

_*Menu Downloader*_

➥!fb [linkFb]
➥!ig [linkIg] 
➥!ytmp3 [linkyt] *MAX 20 MENIT!*
➥!ytmp4 [linkyt] *MAX 15 MENIT!*

Untuk Tutor Ketik !tutor
Semua Perintah Jangan Pake [ ]

*GUNAKAN BOT SEBAIK MUNGKIN,JANGAN SPAM DAN JANGAN NELPON BOT*
FOLLOW IG: 
https://instagram.com/dandisubhani_
https://Instagram.com/finaaskmya
Terima Kasih:)`, id)*/
            break
        case '!tutor':
            client.reply(from, readme, id)
            break
       case '!korona':
       case '!covid':
      try {
        client.reply(from, 'sedang memuat data...', message.id);
        client.reply(from, await korona());
      } catch (error) {
        client.sendText(from, 'gagal memuat data...', message.id);
        console.log(error.message);
      }
      break;
      case 'assalamualaikum':
      client.reply(from, `Waalaikumsalam ${pushname}`, id)
      break
      case 'anjing':
      case 'babi':
      case 'ajg':
      case 'ngentot':
      case 'ngentod':
      case 'pantek':
      case 'bangsat':
      case 'kontol':
      case 'memek':
      case 'bangsad':
      case 'bgsd':
      case 'mmk':
      case 'anjink':
      case 'komntol':
      client.reply(from, `HAI ${pushname} JANGAN TOXIC WOI AJG,SEKARANG DENDA CEBAN!`, id)
    break
      case 'nolep':
      client.sendFileFromUrl(from, 'https://ibb.co/TYZBYGG', 'image.jpg', 'Wakil Rakyat')
      break
          case '!info':
          case 'info':
            client.sendText(from, `Hai ${pushname} Ini adalah program yang dibuat menggunakan javascript
tolong gunakan bot ini dengan bijak,jangan dispam karena akan membuat bot delay
gunakan seperlunya dan semua media yang kamu kirim tidak tersimpan di server kami
perintah yang kamu berikan kepada bot ini bukan tanggung jawab kami
jika ada masalah,hubungi wa.me/6289636035164
terima kasih:)`, message.id)
         break
        }
    } catch (err) {
        console.log(color('[ERROR]', 'red'), err)
        //client.kill().then(a => console.log(a))
    }
}
